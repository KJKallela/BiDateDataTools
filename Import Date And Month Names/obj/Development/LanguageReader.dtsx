<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/8/2018 1:02:24 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="KJK-HP"
  DTS:CreatorName="KJK-HP\KJKallela"
  DTS:DTSID="{D95F3C8D-1AF9-4EE2-A048-B2428F731322}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3006.16"
  DTS:LocaleID="1035"
  DTS:ObjectName="LanguageReader"
  DTS:PackageType="5"
  DTS:VersionBuild="140"
  DTS:VersionGUID="{212A05D0-1CFD-43C1-9F5A-FF6BCE875887}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Failed Language Inserts]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C7EDAED2-B14A-4E93-A511-3D3BB256E1E7}"
      DTS:ObjectName="Failed Language Inserts">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1035"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Data\Kjk\coding\Bi Tools\DateTools\Import Date And Month Names\FailedLanguageInserts.log">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="MonthName"
              DTS:DTSID="{85A66F9B-8AAB-4992-8385-CA620955F6C4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="LCID Decimal"
              DTS:DTSID="{908C34C4-9120-4FAC-884F-44DA95DBE8F3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DTLG_LanguageName"
              DTS:DTSID="{2CB25B63-B8FC-4BE0-B6D6-F7DAB35E975B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="DTLG_LanguageId"
              DTS:DTSID="{15923E1C-76DF-42DD-A018-F6B6057A8D3D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="DTLG_LCID"
              DTS:DTSID="{77032475-E76E-493F-B19C-7886A69E1580}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="34"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Language"
              DTS:DTSID="{FC37699E-07B3-4FB3-A1C5-FA7AA3ED4665}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="MonthNum"
              DTS:DTSID="{2675EB86-E75C-43B4-A27A-6AE7FAD9B422}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{101D0DCB-9812-4A85-AEF0-3470599B92A1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{20F0E11D-A621-4165-B183-6DEA41E5FF2B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorDescription"
              DTS:DTSID="{5EB7F801-4E92-473A-A408-4C8A295BCF8C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Failed Months]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0993A999-CC07-4539-B37E-B5EE013D96B2}"
      DTS:ObjectName="Failed Months">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1035"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Data\Kjk\coding\Bi Tools\DateTools\Import Date And Month Names\FailedMonthInserts.log">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="MonthName"
              DTS:DTSID="{7F443C1B-9593-40CB-A69C-70E3F79B2C35}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="LCID Decimal"
              DTS:DTSID="{633DCBC4-B009-4E57-9FEA-FC8AC10DC476}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DTLG_LanguageName"
              DTS:DTSID="{7B724E3B-48C3-4DB2-AC43-3E4F136E52E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="DTLG_LanguageId"
              DTS:DTSID="{A1D1BC96-85DF-49FD-9475-AFDFBD5CCC22}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="DTLG_LCID"
              DTS:DTSID="{BD867F12-73B2-400D-AFCE-8DD6499009CE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="34"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Language"
              DTS:DTSID="{CBB89036-7C68-497F-AB25-2E7A8B3EBBE9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="MonthNum"
              DTS:DTSID="{C6EF4FF5-3629-4E48-975F-1E98C89C3037}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{57ADF483-1B39-4EC1-B0D4-49A98EF20D2B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{5E8C2222-624D-43D0-80AF-AA6D0AE6B6B2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorDescription"
              DTS:DTSID="{16FDF610-42E2-48F5-970F-E862D55067C7}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Failed Reads Logging]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EA4AFD2B-B7D3-4AA7-A94C-AF3A9E7AA924}"
      DTS:ObjectName="Failed Reads Logging">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1035"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Data\Kjk\coding\Bi Tools\DateTools\Import Date And Month Names\FailedReads.Log">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="302"
              DTS:TextQualified="True"
              DTS:ObjectName="Flat File Source Error Output Column"
              DTS:DTSID="{403922D2-B867-44FF-85C6-CE6C5346DC7A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{4FF477D3-42C4-4C62-8771-5D72A869D65B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{557BD0D8-7E7C-4409-8FA0-227D807A8D55}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="34"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Language"
              DTS:DTSID="{356DD750-F9E4-4530-AE4E-1BD4E0128C6F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="LCID Decimal"
              DTS:DTSID="{96D1CE3A-3763-4EDD-813A-A42543AD5023}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{64E01ACD-ACDE-44C7-9366-FB8DFE248D77}"
      DTS:ObjectName="KJK-HP\SQLEXPRESS.BiTools">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=KJK-HP\SQLEXPRESS;Initial Catalog=BiTools;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Language Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{5228A3FE-E1E5-4AAB-A795-01F5A9898904}"
      DTS:ObjectName="Language Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Data\Kjk\coding\Bi Tools\DateTools\Import Date And Month Names\local_month_and_day_names.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="34"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Language"
              DTS:DTSID="{121D735B-11C6-4B19-9083-766A62A630D2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="4"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LCID Hex"
              DTS:DTSID="{911C73C1-5167-46C7-8066-06493AD93B10}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="LCID Decimal"
              DTS:DTSID="{7A456338-4F42-405A-8029-50FB9595E092}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Empty1"
              DTS:DTSID="{E6011934-D734-4631-85F2-586160C94A59}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Monday"
              DTS:DTSID="{BE096691-44AD-47E5-8350-04FEC3682A83}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Tuesday"
              DTS:DTSID="{9AA73282-6157-4AE8-9962-473FEF9EB60E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Wednesday"
              DTS:DTSID="{A9A5E21D-3F57-4BE7-B68F-43BF2F5BC669}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Thursday"
              DTS:DTSID="{8444FC1B-5BF5-46A9-8F66-B507694C31B7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Friday"
              DTS:DTSID="{951DD426-BEB2-41B7-B9AD-0AB2598EEC2B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Saturday"
              DTS:DTSID="{869A2A4C-2830-40A9-8B40-1B09A1C388AD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Sunday"
              DTS:DTSID="{0A0C1089-1FED-442F-9C0F-0005B8E837B7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Empty2"
              DTS:DTSID="{FE05E81F-23AD-4FE8-BACD-128DDC6CC8D4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="January"
              DTS:DTSID="{D8EF9B29-0A11-447A-8FC4-6709991684D9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="February"
              DTS:DTSID="{1FCB3045-D264-4FF9-B514-282A2EDF7687}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="March"
              DTS:DTSID="{13C5DC42-B879-461C-87D9-B8F20E636742}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="April"
              DTS:DTSID="{1C8070B4-2D10-4AC9-9BF7-697E08ADB610}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="May"
              DTS:DTSID="{B23B3993-C1DB-4E35-A41D-705CEBE18C06}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="June"
              DTS:DTSID="{DE984D83-9DE8-4F4A-99B8-C85633931131}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Juliy"
              DTS:DTSID="{A726A886-E230-4D47-88DC-BF2E683D146E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="August"
              DTS:DTSID="{A521BAAF-9F96-409F-9EA5-3A784DB1DB4D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="September"
              DTS:DTSID="{E5FF78EB-0FF7-4FF6-B20C-185CB5766047}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="October"
              DTS:DTSID="{EBBE2721-A2AA-4AAF-969D-022624B7E9C2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="November"
              DTS:DTSID="{0BD49A65-D3D3-4867-B32A-43C758B2CDDB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="December"
              DTS:DTSID="{7651FA59-7339-41A7-8FF2-6830482C4596}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Read All Languages"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{A0E28A01-85EC-45FC-98CC-DEDD92F7CFDC}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Read All Languages">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Read All Languages\Eliminate Dups"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Eliminate Dups"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read All Languages\Eliminate Dups.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read All Languages\Eliminate Dups.Inputs[Sort Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[Language]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read All Languages\Eliminate Dups.Inputs[Sort Input].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[Language]"
                      dataType="wstr"
                      length="34"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[Language]"
                      name="Language"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[Language]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[LCID Decimal]"
                      dataType="ui8"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[LCID Decimal]"
                      name="LCID Decimal"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read All Languages\Failed Inserts"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Failed Inserts"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Language
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Language_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 LCIDDecimal
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool LCIDDecimal_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Settings.get_Default():SC_7691bf9f2214435b88b8d41846d08951.Properties.Sett" +
    "ings")]

namespace SC_7691bf9f2214435b88b8d41846d08951.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7691bf9f2214435b88b8d41846d08951.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6869eaaa-ff66-45ee-8508-6772ae96726d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7691bf9f2214435b88b8d41846d08951</RootNamespace>
    <AssemblyName>SC_7691bf9f2214435b88b8d41846d08951</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7691bf9f2214435b88b8d41846d08951" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7691bf9f2214435b88b8d41846d08951</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7691bf9f2214435b88b8d41846d08951</msb:DisplayName>
		<msb:ProjectId>{3D0F2887-781D-4DF0-99E7-7291AB25A1E9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7691bf9f2214435b88b8d41846d08951.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7691bf9f2214435b88b8d41846d08951")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7691bf9f2214435b88b8d41846d08951")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7691bf9f2214435b88b8d41846d08951.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7691bf9f2214435b88b8d41846d08951.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI4LyloAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA4jMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJAzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
MwAAAAAAAEgAAAACAAUADCIAAMwQAAABAAAAAAAAANgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvBgAABm8TAAAK
bw4AAAYqHgIoEgAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKlIC
exUAAAoCexYAAAoXlG8XAAAKKiICFygYAAAKKlICexUAAAoCexYAAAoYlG8ZAAAKKiICGCgYAAAK
KlICexUAAAoCexYAAAoZlG8XAAAKKiICGSgYAAAKKiYCGgMoGgAACipaAywIAhooGwAACipyAQAA
cHMcAAAKeh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzFgAABn0BAAAEAgJzFwAABn0CAAAEKpIE
cp4AAHAabyAAAAosFQIFAgMoIQAACg4EcwUAAAZvFAAABipKKwcCA28VAAAGA28QAAAGLfEqBio6
AigiAAAKAgN9AwAABCo6AigiAAAKAgN9BAAABCoeAigiAAAKKq5+BQAABC0ecq4AAHDQBwAAAigj
AAAKbyQAAApzJQAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCYAAAoqLnMd
AAAGgAcAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAACwGAAAjfgAAmAYA
AFAHAAAjU3RyaW5ncwAAAADoDQAAIAEAACNVUwAIDwAAEAAAACNHVUlEAAAAGA8AALQBAAAjQmxv
YgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAgAAAACAAAAAcAAAAeAAAADwAAACYAAAAQ
AAAAAwAAAA0AAAAOAAAAAQAAAAUAAAABAAAAAABQAwEAAAAAAAYANwKIBQYAywKIBQYAgwF1BQ8A
/AUAAAYAsAFUBAYAGgJUBAYA+wFUBAYAsgJUBAYAVwJUBAYAcAJUBAYAxwFUBAYA4gEGAwoAiwLQ
AAoAHgXQAA4ADwXQAAoAxgTQAAoAwgbQAAYAhQb8AwYAZgF1BQYALwWoBQYAugQ/BBIANgE6AxIA
lwE6AxIAHgEqBAYASwGIBRYAAQA/BQYAZgT8AwYAIwP8AwYAqQT8AwYA8QD8AwYAogD8AwYARwdU
BAAAAABHAAAAAAABAAEAAQAQAA8EAAAQAAEAAQABABAAAgUAADkAAQAFAAEAEACkBgAARQABABIA
AQAQAHkGAABJAAMAFgABABAAOgYAAEkABAAXAAAAEACvBQsGSQAFABgAAAEQAGkGCwZhAAcAHAAG
AHkGfwAGADoGgwABALIGhwABALIGhwARAAMEiwARAA4BjwARAHcAkwBQIAAAAADGAOkCBgABAFgg
AAAAAMYA9AIGAAEAYCAAAAAAxgAkB5cAAQB5IAAAAACGGGgFBgACAIEgAAAAAIYYaAUlAAIAjCAA
AAAAhgiHAJ0ABQChIAAAAACGCHgDRwAFAKogAAAAAIYIGgSdAAUAvyAAAAAAhgi4A0cABQDIIAAA
AACGCJUAoQAFAN0gAAAAAIYIjQNHAAUA5iAAAAAAhggqA50ABQD7IAAAAACGCKEDRwAFAAQhAAAA
AIYIgAQQAAUADiEAAAAAhgjPA6UABgAlIQAAAACGADsHRwAHAC0hAAAAAIYAjAZHAAcANSEAAAAA
hhhoBQYABwBVIQAAAADGABcHqgAHAHohAAAAAMYBEAeXAAsAjSEAAAAAxgEkB5cADACPIQAAAACG
GGgFtAANAJ4hAAAAAIYYaAW0AA4ArSEAAAAAgxhoBQYADwC1IQAAAACTCCsFugAPAOEhAAAAAJMI
9gC/AA8A6CEAAAAAkwgCAcQADwDwIQAAAACWCJgGygAQAPchAAAAAIYYaAUGABAA/yEAAAAAkRhu
Bc8AEAAAAAEAPwcAAAEAJAUAAAIARAYAAAMA1AQAAAEAAAMAAAEAAAMAAAEAUAAAAAIAxgAAAAMA
JAUAAAQA1AQAAAEAJAUAAAEAPwcAAAEAyAYAAAEAyAYAAAEAAAMJAGgFAQARAGgFBgAZAGgFCgAp
AGgFEAAxAGgFEAA5AGgFEABBAGgFEABJAGgFEABRAGgFEABZAGgFEABhAGgFEABpAGgFBgCZAGgF
BgC5AGgFFQDJAGgFBgCJAOkCBgCJAPQCBgCJAFgAGwDRAJUEIABxAGgFJQBxACQFLwBxAEQGMwB5
AD4ANwBxAOQDPAB5ACADIABxAPMDQQBxAOsDAQDZAGgFEABxADsHRwBxAIwGRwCJAGgFBgDhAHIG
SwCJAFgGUgCRAGgFBgDxALQAWADxAEMHXwChAGgFZQDBAGgFBgAuAAsA7gAuABMA9wAuABsAFgEu
ACMAHwEuACsASAEuADMASAEuADsASAEuAEMAHwEuAEsATgEuAFMASAEuAFsAZQFDAGMArwHhAHsA
rwHjAGsArwFpAXMAFgGJAXMAFgEDAAEABwALAAgADQAAAIsA0wAAAHwD1wAAAB4E0wAAALwD1wAA
AJkA2wAAAJED1wAAAC4D0wAAAKUD1wAAAJgE2wAAANMD1wAAAC8F3wAAABYB5AAAAJwG6QACAAYA
AwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQABAA4AEwABAA8AFQAC
ABkAFwACABoAGQABABsAGQACABwAGwAEgAAAAQAAAAAAAAAAAAAAAAAaAAAABAAAAAAAAAAAAAAA
bQBuAAAAAAAOAAAAAAAAAAAAAAB2ANIGAAAAAA4AAAAAAAAAAAAAAHYA7wYAAAAABAAAAAAAAAAA
AAAAbQD8AwAAAAAOAAAAAAAAAAAAAAB2AN4EAAAAAAAAAAABAAAAuQUAAAAAAElEVFNDb21wb25l
bnRNZXRhRGF0YTEwMABTQ183NjkxYmY5ZjIyMTQ0MzViODhiOGQ0MTg0NmQwODk1MQBHZXRJbnQz
MgA8TW9kdWxlPgBJbnB1dElEAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0Vycm9yQ29kZQBnZXRfTGFuZ3VhZ2UAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1
dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcA
Z2V0X0xDSUREZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ183NjkxYmY5ZjIyMTQ0MzVi
ODhiOGQ0MTg0NmQwODk1MS5kbGwAZ2V0X0Vycm9yQ29kZV9Jc051bGwAZ2V0X0xhbmd1YWdlX0lz
TnVsbABnZXRfTENJRERlY2ltYWxfSXNOdWxsAGdldF9FcnJvckNvbHVtbl9Jc051bGwAc2V0X0Vy
cm9yRGVzY3JpcHRpb25fSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AZ2V0X0Vycm9yQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
c2V0X0Vycm9yRGVzY3JpcHRpb24AR2V0RXJyb3JEZXNjcmlwdGlvbgBTdHJpbmdDb21wYXJpc29u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUGlwZWxpbmVXcmFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFw
cGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzc2OTFiZjlmMjIxNDQzNWI4OGI4ZDQxODQ2
ZDA4OTUxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ183
NjkxYmY5ZjIyMTQ0MzViODhiOGQ0MTg0NmQwODk1MS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rp
b25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Q
cm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAICbSQBzAE4AdQBsAGwAIABwAHIA
bwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBl
AC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUA
bQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADcANgA5ADEAYgBm
ADkAZgAyADIAMQA0ADQAMwA1AGIAOAA4AGIAOABkADQAMQA4ADQANgBkADAAOAA5ADUAMQAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAPZLvyb+KM0aru55NbDBvswAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQQgABJpBCABDggJIAMBEj0dCBJBAwYSPQMGHQgEIAEI
CAQgAQIIBSACAQgcAyAAAgYgAgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk0
4IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIAyAADgQgAQECCSAE
AQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAIAygAAgMoAA4ECAASUQQI
ABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NDXzc2OTFiZjlmMjIxNDQzNWI4OGI4ZDQxODQ2ZDA4OTUxAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAuDMAAAAAAAAA
AAAA0jMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwA3ADYAOQAxAGIAZgA5AGYAMgAyADEANAA0ADMANQBiADgAOABiADgAZAA0ADEAOAA0
ADYAZAAwADgAOQA1ADEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcANgA5ADEAYgBm
ADkAZgAyADIAMQA0ADQAMwA1AGIAOAA4AGIAOABkADQAMQA4ADQANgBkADAAOAA5ADUAMQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwA2
ADkAMQBiAGYAOQBmADIAMgAxADQANAAzADUAYgA4ADgAYgA4AGQANAAxADgANAA2AGQAMAA4ADkA
NQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcANgA5
ADEAYgBmADkAZgAyADIAMQA0ADQAMwA1AGIAOAA4AGIAOABkADQAMQA4ADQANgBkADAAOAA5ADUA
MQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA5DMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_7691bf9f2214435b88b8d41846d08951</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">3E</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read All Languages\Failed Inserts.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts.Inputs[Input 0].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[Language]" />
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts.Inputs[Input 0].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[LCID Decimal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read All Languages\Failed Inserts.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read All Languages\Failed Inserts.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read All Languages\Failed Inserts.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read All Languages\Failed Inserts.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read All Languages\Failed Inserts Logging"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1035"
              name="Failed Inserts Logging">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">false</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Read All Languages\Failed Inserts Logging.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Failed Language Inserts]"
                  connectionManagerRefId="Package.ConnectionManagers[Failed Language Inserts]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[Language]" />
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[LCID Decimal]" />
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      dataType="i4"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      name="ErrorDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Read All Languages\Failed Reads"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Failed Reads"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_040409868bfa4b13a9010d1da630420f.Properties.Settings.get_Default():SC_040409868bfa4b13a9010d1da630420f.Properties.Sett" +
    "ings")]

namespace SC_040409868bfa4b13a9010d1da630420f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_040409868bfa4b13a9010d1da630420f.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{573d4fd9-b61e-447c-a972-396faa09c85e}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_040409868bfa4b13a9010d1da630420f</RootNamespace>
    <AssemblyName>SC_040409868bfa4b13a9010d1da630420f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_040409868bfa4b13a9010d1da630420f" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_040409868bfa4b13a9010d1da630420f</msb:CodeName>
		<msb:DisplayName>SC_040409868bfa4b13a9010d1da630420f</msb:DisplayName>
		<msb:ProjectId>{4D1174C4-4F22-44C7-9F22-B912AD6F1455}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_040409868bfa4b13a9010d1da630420f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_040409868bfa4b13a9010d1da630420f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_040409868bfa4b13a9010d1da630420f")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_040409868bfa4b13a9010d1da630420f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_040409868bfa4b13a9010d1da630420f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_040409868bfa4b13a9010d1da630420f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_040409868bfa4b13a9010d1da630420f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_040409868bfa4b13a9010d1da630420f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_040409868bfa4b13a9010d1da630420f.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANIgyloAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAYi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAvAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
LwAAAAAAAEgAAAACAAUAXCEAAPwMAAABAAAAAAAAAFguAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioGKh4CKAgAAAYqKgIDBAUoEgAA
CioeAigTAAAKKh4CKBQAAAoqfgIoFQAACgICcwwAAAZ9AQAABAICcw0AAAZ9AgAABCqSBHIBAABw
Gm8WAAAKLBUCBQIDKBcAAAoOBHMFAAAGbwoAAAYqSisHAgNvCwAABgNvBgAABi3xKjoCKBgAAAoC
A30DAAAEKjoCKBgAAAoCA30EAAAEKh4CKBgAAAoqrn4FAAAELR5yEQAAcNAHAAACKBkAAApvGgAA
CnMbAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoHAAACioucxMAAAaABwAA
BCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAC8BAAAI34AACgFAADIBQAA
I1N0cmluZ3MAAAAA8AoAAIQAAAAjVVMAdAsAABAAAAAjR1VJRAAAAIQLAAB4AQAAI0Jsb2IAAAAA
AAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAAHgAAAAgAAAAHAAAAFAAAAA0AAAAcAAAAEAAAAAIA
AAADAAAABAAAAAEAAAAEAAAAAQAAAAAA6gIBAAAAAAAGAMAB/gMGAFQC/gMGAAwB6wMPAHIEAAAG
ADkBWgMGAKMBWgMGAIQBWgMGADsCWgMGAOABWgMGAPkBWgMGAFABWgMGAGsBswIKABQCWQAKAL0D
WQAOAK4DWQAKAIkDWQAKADgFWQAGAPsEEgMGAO8A6wMGAM4DHgQGAH0DRQMSAL8A1AISACAB1AIS
AKcAMAMGANQA/gMGAM0CEgMGAGwDEgMGAHoAEgMGACsAEgMGAL0FWgMAAAAAAQAAAAAAAQABAAEA
EAAlAwAAEAABAAEAAQAQAKEDAAA5AAEABQABABAAGgUAAEUAAQAIAAEAEADvBAAASQADAAwAAQAQ
ALAEAABJAAQADQAAABAAJQSBBEkABQAOAAABEADfBIEEYQAHABIABgDvBFsABgCwBF8AAQAoBWMA
AQAoBWMAEQAZA2cAEQCXAGsAEQAbAG8AUCAAAAAAxgByAgYAAQBYIAAAAADGAH0CBgABAGAgAAAA
AMYAmgVzAAEAYiAAAAAAhhjeAwYAAgBqIAAAAACGGN4DGwACAHUgAAAAAIYAsQUlAAUAfSAAAAAA
hgACBSUABQCFIAAAAACGGN4DBgAFAKUgAAAAAMYAjQV5AAUAyiAAAAAAxgGGBXMACQBgIAAAAADG
AZoFcwAKAN0gAAAAAIYY3gODAAsA7CAAAAAAhhjeA4MADAD7IAAAAACDGN4DBgANAAMhAAAAAJMI
ygOJAA0ALyEAAAAAkwh/AI4ADQA2IQAAAACTCIsAkwANAD4hAAAAAJYIDgWZAA4ARSEAAAAAhhje
AwYADgBNIQAAAACRGOQDngAOAAAAAQC1BQAAAQDDAwAAAgC6BAAAAwCXAwAAAQAKAAAAAgBPAAAA
AwDDAwAABACXAwAAAQDDAwAAAQC1BQAAAQA+BQAAAQA+BQAAAQCJAgkA3gMBABEA3gMGABkA3gMK
ACkA3gMQADEA3gMQADkA3gMQAEEA3gMQAEkA3gMQAFEA3gMQAFkA3gMQAGEA3gMQAGkA3gMGAJkA
3gMGALkA3gMVAMkA3gMGAIkAcgIGAIkAfQIGAHEA3gMbAHEAsQUlAHEAAgUlAIkA3gMGANEA6AQp
AIkAzgQwAJEA3gMGAOEAPQA2AOEAuQU9AKEA3gNCAMEA3gMGACkAcwDZAC4ACwCxAC4AEwC6AC4A
GwDZAC4AIwDiAC4AKwALAS4AMwALAS4AOwALAS4AQwDiAC4ASwARAS4AUwALAS4AWwAoAUMAYwBy
AUkAcwDZAOEAewByAeMAawByAQcAAQAIAAMAAADOA6IAAACfAKcAAAASBawAAgAPAAMAAgAQAAUA
AQARAAUAAgASAAcABIAAAAEAAAAAAAAAAAAAAAAAjwIAAAQAAAAAAAAAAAAAAEkAEgAAAAAADgAA
AAAAAAAAAAAAUgBIBQAAAAAOAAAAAAAAAAAAAABSAGUFAAAAAAQAAAAAAAAAAAAAAEkAEgMAAAAA
AAAAAAEAAAAvBAAAAAAAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU0NfMDQwNDA5ODY4YmZh
NGIxM2E5MDEwZDFkYTYzMDQyMGYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDXzA0MDQwOTg2OGJmYTRiMTNhOTAxMGQxZGE2MzA0MjBmLmRs
bABTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1
cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZl
cgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTQ18wNDA0MDk4NjhiZmE0YjEzYTkwMTBkMWRhNjMwNDIwZi5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMDQwNDA5ODY4YmZhNGIxM2E5MDEwZDFkYTYz
MDQyMGYuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0
X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0
X0Fzc2VtYmx5AAAAAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AMAA0ADAANAAwADkAOAA2ADgAYgBm
AGEANABiADEAMwBhADkAMAAxADAAZAAxAGQAYQA2ADMAMAA0ADIAMABmAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAqz0B8dIoQEiC2Ifeb+0EywAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERWQkgAwESPR0IEkEDIAACBiACAg4RbQUgAR0ICAYAARJxEXUEIAASeQYg
AgEOEnkIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwJIAQB
CA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQQIABJRBAgAElUECAASIAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMDQwNDA5
ODY4YmZhNGIxM2E5MDEwZDFkYTYzMDQyMGYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAOC8AAAAAAAAAAAAAUi8AAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAEQvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAQwBfADAANAAwADQAMAA5ADgANgA4AGIAZgBhADQAYgAxADMAYQA5ADAAMQAwAGQAMQBk
AGEANgAzADAANAAyADAAZgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAA0ADAANAAw
ADkAOAA2ADgAYgBmAGEANABiADEAMwBhADkAMAAxADAAZAAxAGQAYQA2ADMAMAA0ADIAMABmAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAw
ADQAMAA0ADAAOQA4ADYAOABiAGYAYQA0AGIAMQAzAGEAOQAwADEAMABkADEAZABhADYAMwAwADQA
MgAwAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAA0
ADAANAAwADkAOAA2ADgAYgBmAGEANABiADEAMwBhADkAMAAxADAAZAAxAGQAYQA2ADMAMAA0ADIA
MABmAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAA
ADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABkPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_040409868bfa4b13a9010d1da630420f</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">7D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read All Languages\Failed Reads.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read All Languages\Failed Reads.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read All Languages\Failed Reads.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read All Languages\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read All Languages\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Language Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Language Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[Language]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Language]"
                      length="34"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[Language]"
                      name="Language"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Decimal]"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]"
                      name="LCID Decimal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[December]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[December]"
                      length="50"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].Columns[December]"
                      name="December"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Hex]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="LCID Hex" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Decimal]"
                      dataType="ui8"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Empty1]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Empty1" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Monday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Monday" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Tuesday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Tuesday" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Wednesday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Wednesday" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Thursday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Thursday" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Friday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Friday" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Saturday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Saturday" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Sunday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Sunday" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Empty2]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Empty2" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[January]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="January" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[February]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="February" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[March]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="March" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[April]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="April" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[May]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="May" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[June]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="June" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Juliy]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Juliy" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[August]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="August" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[September]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="September" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[October]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="October" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[November]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="November" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[December]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="December" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read All Languages\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Languages]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read All Languages\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  connectionManagerRefId="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTLG_LCID]"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[LCID Decimal]" />
                    <inputColumn
                      refId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTLG_LanguageName]"
                      lineageId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output].Columns[Language]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTLG_LanguageId]"
                      dataType="i2"
                      name="DTLG_LanguageId" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTLG_LCID]"
                      dataType="i8"
                      name="DTLG_LCID" />
                    <externalMetadataColumn
                      refId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTLG_LanguageName]"
                      dataType="wstr"
                      length="50"
                      name="DTLG_LanguageName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Read All Languages.Paths[Flat File Source Error Output]"
              endId="Package\Read All Languages\Failed Reads.Inputs[Input 0]"
              name="Flat File Source Error Output"
              startId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Read All Languages.Paths[Flat File Source Output]"
              endId="Package\Read All Languages\Eliminate Dups.Inputs[Sort Input]"
              name="Flat File Source Output"
              startId="Package\Read All Languages\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Read All Languages.Paths[OLE DB Destination Error Output]"
              endId="Package\Read All Languages\Failed Inserts.Inputs[Input 0]"
              name="OLE DB Destination Error Output"
              startId="Package\Read All Languages\OLE DB Destination.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\Read All Languages.Paths[Output 0]"
              endId="Package\Read All Languages\Failed Inserts Logging.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\Read All Languages\Failed Inserts.Outputs[Output 0]" />
            <path
              refId="Package\Read All Languages.Paths[Sort Output]"
              endId="Package\Read All Languages\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Read All Languages\Eliminate Dups.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Read Month Names"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{fecf3914-1b8b-45c6-a7ad-a31f1b8c4940}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Read Month Names"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Read Month Names\Database Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Database Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Months]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read Month Names\Database Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  connectionManagerRefId="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      externalMetadataColumnId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTMO_LanguageId]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageId]" />
                    <inputColumn
                      refId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].Columns[MonthNum]"
                      cachedDataType="i4"
                      cachedName="MonthNum"
                      externalMetadataColumnId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTMO_MonthNum]"
                      lineageId="Package\Read Month Names\Script Component.Outputs[Output 0].Columns[MonthNum]" />
                    <inputColumn
                      refId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].Columns[NativeMonthName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="NativeMonthName"
                      externalMetadataColumnId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTMO_MonthName]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTMO_MonthNum]"
                      dataType="ui1"
                      name="DTMO_MonthNum" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTMO_LanguageId]"
                      dataType="i2"
                      name="DTMO_LanguageId" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTMO_MonthName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DTMO_MonthName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Month Names\Failed Inserts"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Failed Inserts"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String MonthName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool MonthName_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Language
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Language_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 MonthNum
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool MonthNum_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[4]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String NativeMonthName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool NativeMonthName_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String DTLGLanguageName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool DTLGLanguageName_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int16 DTLGLanguageId
    {
        get
        {
            return Buffer.GetInt16(BufferColumnIndexes[7]);
        }
    }
    public bool DTLGLanguageId_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_956967dd580a43679612a1baca9eb6fa.Properties.Settings.get_Default():SC_956967dd580a43679612a1baca9eb6fa.Properties.Sett" +
    "ings")]

namespace SC_956967dd580a43679612a1baca9eb6fa.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_956967dd580a43679612a1baca9eb6fa.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{759d7b9e-44f2-4a32-87ee-cd75bc54f473}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_956967dd580a43679612a1baca9eb6fa</RootNamespace>
    <AssemblyName>SC_956967dd580a43679612a1baca9eb6fa</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_956967dd580a43679612a1baca9eb6fa" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_956967dd580a43679612a1baca9eb6fa</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_956967dd580a43679612a1baca9eb6fa</msb:DisplayName>
		<msb:ProjectId>{56DA4501-05F9-45F4-98B6-C5FD4C9F0945}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_956967dd580a43679612a1baca9eb6fa.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_956967dd580a43679612a1baca9eb6fa")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_956967dd580a43679612a1baca9eb6fa")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_956967dd580a43679612a1baca9eb6fa.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_956967dd580a43679612a1baca9eb6fa.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_956967dd580a43679612a1baca9eb6fa.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_956967dd580a43679612a1baca9eb6fa.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_956967dd580a43679612a1baca9eb6fa.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_956967dd580a43679612a1baca9eb6fa.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA/F0VoAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAA9jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKQ1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA/BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADY
NQAAAAAAAEgAAAACAAUAhCIAAGgSAAABAAAAAAAAAOw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvDAAABm8TAAAK
bxYAAAYqHgIoGgAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKlIC
exUAAAoCexYAAAoXlG8XAAAKKiICFygYAAAKKlICexUAAAoCexYAAAoYlG8ZAAAKKiICGCgYAAAK
KlICexUAAAoCexYAAAoZlG8ZAAAKKiICGSgYAAAKKlICexUAAAoCexYAAAoalG8ZAAAKKiICGigY
AAAKKlICexUAAAoCexYAAAoblG8XAAAKKiICGygYAAAKKlICexUAAAoCexYAAAoclG8XAAAKKiIC
HCgYAAAKKlICexUAAAoCexYAAAodlG8aAAAKKiICHSgYAAAKKiYCHgMoGwAACipaAywIAh4oHAAA
CipyAQAAcHMdAAAKeh4CKB4AAAoqHgIoHwAACip+AiggAAAKAgJzHgAABn0BAAAEAgJzHwAABn0C
AAAEKpIEcp4AAHAabyEAAAosFQIFAgMoIgAACg4EcwUAAAZvHAAABipKKwcCA28dAAAGA28YAAAG
LfEqBio6AigjAAAKAgN9AwAABCo6AigjAAAKAgN9BAAABCoeAigjAAAKKq5+BQAABC0ecq4AAHDQ
BwAAAigkAAAKbyUAAApzJgAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCcA
AAoqLnMlAAAGgAcAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAQHAAAj
fgAAcAcAAAQIAAAjU3RyaW5ncwAAAAB0DwAAIAEAACNVUwCUEAAAEAAAACNHVUlEAAAApBAAAMQB
AAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAgAAAACAAAAAcAAAAmAAAADwAA
ACcAAAAQAAAAAwAAABUAAAAWAAAAAQAAAAUAAAABAAAAAACTAwEAAAAAAAYAigI7BgYAHgM7BgYA
1gEoBg8ArwYAAAYAAwIHBQYAbQIHBQYATgIHBQYABQMHBQYAqgIHBQYAwwIHBQYAGgIHBQYANQJZ
AwoA3gIjAQoA0QUjAQ4AwgUjAQoAeQUjAQoAdQcjAQYAOAeiBAYAuQEoBgYA4gVbBgYAbQXyBBIA
iQF9AxIA6gF9AxIAcQHdBAYAngE7BhYAAQDyBQYAGQWiBAYAdgOiBAYAXAWiBAYARAGiBAYAvgCi
BAYA+gcHBQAAAAAsAAAAAAABAAEAAQAQAMIEAAAQAAEAAQABABAAtQUAADkAAQAFAAEAEABXBwAA
RQABABoAAQAQACwHAABJAAMAHgABABAA7QYAAEkABAAfAAAAEABiBr4GSQAFACAAAAEQABwHvgZh
AAcAJAAGACwHhAAGAO0GiAABAGUHjAABAGUHjAARALYEkAARAGEBlAARAJMAmABQIAAAAADGADwD
BgABAFggAAAAAMYARwMGAAEAYCAAAAAAxgDXB5wAAQB5IAAAAACGGBsGBgACAIEgAAAAAIYYGwYl
AAIAjCAAAAAAhgj3AKIABQChIAAAAACGCBoETAAFAKogAAAAAIYIsQCiAAUAvyAAAAAAhgjqA0wA
BQDIIAAAAACGCKkEpgAFAN0gAAAAAIYISgRMAAUA5iAAAAAAhgijAKYABQD7IAAAAACGCNUDTAAF
AAQhAAAAAIYIzQSmAAUAGSEAAAAAhgheBEwABQAiIQAAAACGCAUBogAFADchAAAAAIYILwRMAAUA
QCEAAAAAhgjiAKIABQBVIQAAAACGCP4DTAAFAF4hAAAAAIYIgACqAAUAcyEAAAAAhgi7A0wABQB8
IQAAAACGCDMFEAAFAIYhAAAAAIYIdQSuAAYAnSEAAAAAhgDuB0wABwClIQAAAACGAD8HTAAHAK0h
AAAAAIYYGwYGAAcAzSEAAAAAxgDKB7MABwDyIQAAAADGAcMHnAALAAUiAAAAAMYB1wecAAwAByIA
AAAAhhgbBr0ADQAWIgAAAACGGBsGvQAOACUiAAAAAIMYGwYGAA8ALSIAAAAAkwjeBcMADwBZIgAA
AACTCEkByAAPAGAiAAAAAJMIVQHNAA8AaCIAAAAAlghLB9MAEABvIgAAAACGGBsGBgAQAHciAAAA
AJEYIQbYABAAAAABAPIHAAABANcFAAACAPcGAAADAIcFAAABAFMDAAABAFMDAAABADUAAAACABkB
AAADANcFAAAEAIcFAAABANcFAAABAPIHAAABAHsHAAABAHsHAAABAFMDCQAbBgEAEQAbBgYAGQAb
BgoAKQAbBhAAMQAbBhAAOQAbBhAAQQAbBhAASQAbBhAAUQAbBhAAWQAbBhAAYQAbBhAAaQAbBgYA
mQAbBgYAuQAbBhUAyQAbBgYAiQA8AwYAiQBHAwYAiQBhABsA0QBIBSAAcQAbBiUAcQDXBS8AcQD3
BjMAeQBzAyAAcQCKBDcAeQAaADwAeQAjAEEAcQCZBEYAcQCRBAEA2QAbBhAAcQDuB0wAcQA/B0wA
iQAbBgYA4QAlB1AAiQALB1cAkQAbBgYA8QDQAF0A8QD2B2QAoQAbBmoAwQAbBgYALgALAPsALgAT
AAQBLgAbACMBLgAjACwBLgArAFUBLgAzAFUBLgA7AFUBLgBDACwBLgBLAFsBLgBTAFUBLgBbAHIB
QwBjALwB4QB7ALwB4wBrALwBaQJzACMBiQJzACMBAwABAAcAEwAIABUAAAAPAdwAAAA5BOAAAAC1
ANwAAADuA+AAAACtBOQAAABOBOAAAACnAOQAAADZA+AAAADRBOQAAABiBOAAAAAJAdwAAAAzBOAA
AADmANwAAAACBOAAAACEAOgAAAC/A+AAAABLBdwAAAB5BOAAAADiBewAAABpAfEAAABPB/YAAgAG
AAMAAgAHAAUAAgAIAAcAAgAJAAkAAgAKAAsAAgALAA0AAgAMAA8AAgANABEAAgAOABMAAgAPABUA
AgAQABcAAgARABkAAgASABsAAgATAB0AAgAUAB8AAgAVACEAAQAWACMAAQAXACUAAgAhACcAAgAi
ACkAAQAjACkAAgAkACsABIAAAAEAAAAAAAAAAAAAAAAAPQAAAAQAAAAAAAAAAAAAAHIAdwAAAAAA
DgAAAAAAAAAAAAAAewCFBwAAAAAOAAAAAAAAAAAAAAB7AKIHAAAAAAQAAAAAAAAAAAAAAHIAogQA
AAAADgAAAAAAAAAAAAAAewCRBQAAAAAAAAAAAQAAAGwGAAAAAAAAAElEVFNDb21wb25lbnRNZXRh
RGF0YTEwMABHZXRJbnQzMgBHZXRJbnQxNgA8TW9kdWxlPgBJbnB1dElEAFNDXzk1Njk2N2RkNTgw
YTQzNjc5NjEyYTFiYWNhOWViNmZhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBnZXRf
RFRMR0xhbmd1YWdlSWQAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNvZGUAZ2V0X0xhbmd1YWdl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9EVExHTGFuZ3VhZ2VOYW1l
AGdldF9Nb250aE5hbWUAZ2V0X05hdGl2ZU1vbnRoTmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfOTU2OTY3ZGQ1ODBh
NDM2Nzk2MTJhMWJhY2E5ZWI2ZmEuZGxsAGdldF9EVExHTGFuZ3VhZ2VJZF9Jc051bGwAZ2V0X0Vy
cm9yQ29kZV9Jc051bGwAZ2V0X0xhbmd1YWdlX0lzTnVsbABnZXRfRFRMR0xhbmd1YWdlTmFtZV9J
c051bGwAZ2V0X01vbnRoTmFtZV9Jc051bGwAZ2V0X05hdGl2ZU1vbnRoTmFtZV9Jc051bGwAZ2V0
X01vbnRoTnVtX0lzTnVsbABnZXRfRXJyb3JDb2x1bW5fSXNOdWxsAHNldF9FcnJvckRlc2NyaXB0
aW9uX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQBnZXRfTW9udGhOdW0AcmVzb3VyY2VN
YW4AU2NyaXB0TWFpbgBnZXRfRXJyb3JDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlv
bgBzZXRfRXJyb3JEZXNjcmlwdGlvbgBHZXRFcnJvckRlc2NyaXB0aW9uAFN0cmluZ0NvbXBhcmlz
b24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZl
ci5EVFNQaXBlbGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldy
YXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfOTU2OTY3ZGQ1ODBhNDM2Nzk2MTJhMWJh
Y2E5ZWI2ZmEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFND
Xzk1Njk2N2RkNTgwYTQzNjc5NjEyYTFiYWNhOWViNmZhLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVj
dGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50
Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQw
X1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAAICbSQBzAE4AdQBsAGwAIABw
AHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwA
cwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBs
AHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADkANQA2ADkA
NgA3AGQAZAA1ADgAMABhADQAMwA2ADcAOQA2ADEAMgBhADEAYgBhAGMAYQA5AGUAYgA2AGYAYQAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAuu0CyN/XxUm03op30T2x
sgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQQgABJpBCABDggJIAMBEj0dCBJBAwYSPQMGHQgE
IAECCAQgAQgIBCABBggFIAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKA
gQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAMgAA4DIAAI
AyAABgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygA
AgMoAAgDKAAGBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ185NTY5NjdkZDU4MGE0MzY3OTYxMmExYmFjYTllYjZmYQAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAMw1AAAAAAAAAAAAAOY1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYNQAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADkANQA2ADkANgA3AGQAZAA1ADgAMABhADQAMwA2ADcAOQA2ADEAMgBhADEAYgBhAGMA
YQA5AGUAYgA2AGYAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOQA1ADYAOQA2ADcA
ZABkADUAOAAwAGEANAAzADYANwA5ADYAMQAyAGEAMQBiAGEAYwBhADkAZQBiADYAZgBhAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA5ADUA
NgA5ADYANwBkAGQANQA4ADAAYQA0ADMANgA3ADkANgAxADIAYQAxAGIAYQBjAGEAOQBlAGIANgBm
AGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOQA1ADYA
OQA2ADcAZABkADUAOAAwAGEANAAzADYANwA5ADYAMQAyAGEAMQBiAGEAYwBhADkAZQBiADYAZgBh
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD4NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_956967dd580a43679612a1baca9eb6fa</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">74</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[MonthName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MonthName"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[Language]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[MonthNum]"
                      cachedDataType="i4"
                      cachedName="MonthNum"
                      lineageId="Package\Read Month Names\Script Component.Outputs[Output 0].Columns[MonthNum]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[NativeMonthName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="NativeMonthName"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[DTLG_LanguageName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DTLG_LanguageName"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Inserts.Inputs[Input 0].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Month Names\Failed Inserts.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read Month Names\Failed Inserts.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\Failed Inserts.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read Month Names\Failed Inserts.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Month Names\Failed Months Log"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1035"
              name="Failed Months Log">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Read Month Names\Failed Months Log.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Failed Months]"
                  connectionManagerRefId="Package.ConnectionManagers[Failed Months]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[MonthName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MonthName"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[MonthName]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[LCID Decimal]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[DTLG_LanguageName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DTLG_LanguageName"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LanguageName]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LanguageId]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageId]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[DTLG_LCID]"
                      cachedDataType="i8"
                      cachedName="DTLG_LCID"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LCID]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LCID]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[Language]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[MonthNum]"
                      cachedDataType="i4"
                      cachedName="MonthNum"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[MonthNum]"
                      lineageId="Package\Read Month Names\Script Component.Outputs[Output 0].Columns[MonthNum]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].Columns[ErrorDescription]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ErrorDescription"
                      externalMetadataColumnId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      lineageId="Package\Read Month Names\Failed Inserts.Outputs[Output 0].Columns[ErrorDescription]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[MonthName]"
                      dataType="wstr"
                      length="50"
                      name="MonthName" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      dataType="ui8"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LanguageName]"
                      dataType="wstr"
                      length="50"
                      name="DTLG_LanguageName" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LanguageId]"
                      dataType="i2"
                      name="DTLG_LanguageId" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LCID]"
                      dataType="i8"
                      name="DTLG_LCID" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[MonthNum]"
                      dataType="i4"
                      name="MonthNum" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="wstr"
                      length="50"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      name="ErrorDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Read Month Names\Failed Reads"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Failed Reads"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn FlatFileSourceErrorOutputColumn
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool FlatFileSourceErrorOutputColumn_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Settings.get_Default():SC_c77552adc36c4e0094c007736d063241.Properties.Sett" +
    "ings")]

namespace SC_c77552adc36c4e0094c007736d063241.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c77552adc36c4e0094c007736d063241.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c77552adc36c4e0094c007736d063241.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_c77552adc36c4e0094c007736d063241</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_c77552adc36c4e0094c007736d063241</msb:DisplayName>
		<msb:ProjectId>{7CD990C3-0EE6-4B49-B250-105526CB9B2D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_c77552adc36c4e0094c007736d063241.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c77552adc36c4e0094c007736d063241")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c77552adc36c4e0094c007736d063241")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c77552adc36c4e0094c007736d063241.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{05b1630b-7d57-4c02-8082-20fb4d148af9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c77552adc36c4e0094c007736d063241</RootNamespace>
    <AssemblyName>SC_ECF83A5007DA48A28288D44A399DEE56</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_c77552adc36c4e0094c007736d063241" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ECF83A5007DA48A28288D44A399DEE56.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPISyloAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAwjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHAzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAyBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACk
MwAAAAAAAEgAAAACAAUA9CEAAMQQAAABAAAAAAAAALgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvCAAABm8TAAAK
bwwAAAYqHgIoEAAABioqAgMEBSgUAAAKKmYCexUAAAoCexYAAAoWlG8XAAAKdBEAAAEqIgIWKBgA
AAoqUgJ7FQAACgJ7FgAACheUbxkAAAoqIgIXKBgAAAoqUgJ7FQAACgJ7FgAAChiUbxkAAAoqIgIY
KBgAAAoqJgIZAygaAAAKKloDLAgCGSgbAAAKKnIBAABwcxwAAAp6HgIoHQAACioeAigeAAAKKn4C
KB8AAAoCAnMUAAAGfQEAAAQCAnMVAAAGfQIAAAQqkgRyngAAcBpvIAAACiwVAgUCAyghAAAKDgRz
BQAABm8SAAAGKkorBwIDbxMAAAYDbw4AAAYt8SoGKjoCKCIAAAoCA30DAAAEKjoCKCIAAAoCA30E
AAAEKh4CKCIAAAoqrn4FAAAELR5yrgAAcNAHAAACKCMAAApvJAAACnMlAAAKgAUAAAR+BQAABCoa
fgYAAAQqHgKABgAABCoafgcAAAQqHgIoJgAACioucxsAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAAAGAAAjfgAAbAYAAGgHAAAjU3RyaW5ncwAAAADUDQAAIAEA
ACNVUwD0DgAAEAAAACNHVUlEAAAABA8AAMABAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEz
ABYAAAEAAAAhAAAACAAAAAcAAAAcAAAADwAAACYAAAAQAAAAAwAAAAsAAAAMAAAAAQAAAAUAAAAB
AAAAAAAwAwEAAAAAAAYAKgKgBQYAvgKgBQYAdgGNBQ8AFAYAAAYAowFsBAYADQJsBAYA7gFsBAYA
pQJsBAYASgJsBAYAYwJsBAYAugFsBAYA1QH5AgoAfgLDAAoANgXDAA4AJwXDAAoA3gTDAA4AAwTD
AAoA2gbDAAYAnQblAwYAWQGNBQYARwXABQYA0gRXBBIAKQEaAxIAigEaAxIAEQFCBAYAPgGgBRYA
AQBXBQYAfgTlAwYAEwPlAwYAwQTlAwYA5ADlAwYAlQDlAwYAXwdsBAAAAABHAAAAAAABAAEAAQAQ
APgDAAAQAAEAAQABABAAGgUAADkAAQAFAAEAEAC8BgAASQABABAAAQAQAJEGAABNAAMAFAABABAA
UgYAAE0ABAAVAAAAEADHBSMGTQAFABYAAAEQAIEGIwZlAAcAGgAGAJEGhQAGAFIGiQABAMoGjQAB
AMoGjQARAOwDkQARAAEBlQARAHcAmQBQIAAAAADGANwCBgABAFggAAAAAMYA5wIGAAEAYCAAAAAA
xgA8B50AAQB5IAAAAACGGIAFBgACAIEgAAAAAIYYgAUlAAIAjCAAAAAAhggeBKMABQCmIAAAAACG
CIQDTAAFAK8gAAAAAIYIhwCoAAUAxCAAAAAAhghYA0wABQDNIAAAAACGCA4EqAAFAOIgAAAAAIYI
bQNMAAUA6yAAAAAAhgiYBBAABQD1IAAAAACGCK8DrAAGAAwhAAAAAIYAUwdMAAcAFCEAAAAAhgCk
BkwABwAcIQAAAACGGIAFBgAHADwhAAAAAMYALwexAAcAYSEAAAAAxgEoB50ACwB0IQAAAADGATwH
nQAMAHYhAAAAAIYYgAW7AA0AhSEAAAAAhhiABbsADgCUIQAAAACDGIAFBgAPAJwhAAAAAJMIQwXB
AA8AyCEAAAAAkwjpAMYADwDPIQAAAACTCPUAywAPANchAAAAAJYIsAbRABAA3iEAAAAAhhiABQYA
EADmIQAAAACRGIYF1gAQAAAAAQBXBwAAAQA8BQAAAgBcBgAAAwDsBAAAAQDzAgAAAQDzAgAAAQBQ
AAAAAgC5AAAAAwA8BQAABADsBAAAAQA8BQAAAQBXBwAAAQDgBgAAAQDgBgAAAQDzAgkAgAUBABEA
gAUGABkAgAUKACkAgAUQADEAgAUQADkAgAUQAEEAgAUQAEkAgAUQAFEAgAUQAFkAgAUQAGEAgAUQ
AGkAgAUGAKEAgAUGAMEAgAUVANEAgAUGAJEA3AIGAJEA5wIGAJEAWAAbANkArQQgAHEAgAUlAHEA
PAUvAHEAXAYzAHkA0wM3AHEAxAM8AHkAGgBBAHEA3ANGAHEAywMBAOEAgAUQAHEAUwdMAHEApAZM
AJEAgAUGAOkAigZQAJEAcAZXAJkAgAUGAPkApwBdAPkAWwdlAKkAgAVrAMkAgAUGAC4ACwD6AC4A
EwADAS4AGwAiAS4AIwArAS4AKwBUAS4AMwBUAS4AOwBUAS4AQwArAS4ASwBaAS4AUwBUAS4AWwBx
AUMAYwC7AeEAewC7AeMAawC7ASkBcwAiAUkBcwAiAQMAAQAHAAkACAALAAAAIgTaAAAAiAPfAAAA
iwDjAAAAXAPfAAAAEgTjAAAAcQPfAAAAsATnAAAAswPfAAAARwXrAAAACQHwAAAAtAb1AAIABgAD
AAIABwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAEADAAPAAEADQARAAIAFwATAAIAGAAVAAEA
GQAVAAIAGgAXAASAAAABAAAAAAAAAAAAAAAAACMAAAAEAAAAAAAAAAAAAABzAG4AAAAAAA4AAAAA
AAAAAAAAAHwA6gYAAAAADgAAAAAAAAAAAAAAfAAHBwAAAAAEAAAAAAAAAAAAAABzAOUDAAAAAA4A
AAAAAAAAAAAAAHwA9gQAAAAAAAAAAAEAAADRBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGEx
MDAAR2V0SW50MzIAU0NfRUNGODNBNTAwN0RBNDhBMjgyODhENDRBMzk5REVFNTYAPE1vZHVsZT4A
SW5wdXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdl
dF9FcnJvckNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX0VD
RjgzQTUwMDdEQTQ4QTI4Mjg4RDQ0QTM5OURFRTU2LmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABn
ZXRfRXJyb3JDb2x1bW5fSXNOdWxsAGdldF9GbGF0RmlsZVNvdXJjZUVycm9yT3V0cHV0Q29sdW1u
X0lzTnVsbABzZXRfRXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBCbG9iQ29sdW1uAGdldF9FcnJvckNv
bHVtbgBnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENvbHVtbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEdldEVycm9yRGVzY3JpcHRpb24AU3Ry
aW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIA
U2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19jNzc1NTJhZGMzNmM0
ZTAwOTRjMDA3NzM2ZDA2MzI0MS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU0NfYzc3NTUyYWRjMzZjNGUwMDk0YzAwNzczNmQwNjMyNDEuUHJvcGVydGllcwBW
YXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVx
dWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
VHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJ
bnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AACAm0kAcwBO
AHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQA
bwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABo
AGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMA
XwBjADcANwA1ADUAMgBhAGQAYwAzADYAYwA0AGUAMAAwADkANABjADAAMAA3ADcAMwA2AGQAMAA2
ADMAMgA0ADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAPNUw8+x
We5CpN6QIb3GmnwABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0EIAASbQQgAQ4ICSADARI9HQgS
QQMGEj0DBh0IBCABHAgEIAECCAQgAQgIBSACAQgcAyAAAgYgAgIOEXkFIAEdCAgHAAESfRGAgQUg
ABKAhQcgAgEOEoCFCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJJAwYSVQMGElkDBhIgBSAB
ARIMBCAAEkUDIAAIBCABAQIJIAQBCA4SPRJBBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAA
AQQoABJFAygAAgMoAAgDKAAOBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19jNzc1NTJhZGMzNmM0ZTAwOTRjMDA3NzM2
ZDA2MzI0MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQB
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAJgzAAAAAAAAAAAAALIzAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACk
MwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBjADcANwA1ADUAMgBhAGQAYwAzADYAYwA0AGUAMAAwADkANABjADAAMAA3ADcAMwA2
AGQAMAA2ADMAMgA0ADEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAEUAQwBGADgAMwBB
ADUAMAAwADcARABBADQAOABBADIAOAAyADgAOABEADQANABBADMAOQA5AEQARQBFADUANgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ARQBD
AEYAOAAzAEEANQAwADAANwBEAEEANAA4AEEAMgA4ADIAOAA4AEQANAA0AEEAMwA5ADkARABFAEUA
NQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGMANwA3
ADUANQAyAGEAZABjADMANgBjADQAZQAwADAAOQA0AGMAMAAwADcANwAzADYAZAAwADYAMwAyADQA
MQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAxDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_ecf83a5007da48a28288d44a399dee56</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">15</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read Month Names\Failed Reads.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Failed Reads.Inputs[Input 0].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Reads.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Reads.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Month Names\Failed Reads.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read Month Names\Failed Reads.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\Failed Reads.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read Month Names\Failed Reads.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Month Names\Failed Reads Logging"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1035"
              name="Failed Reads Logging">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">false</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Read Month Names\Failed Reads Logging.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Failed Reads Logging]"
                  connectionManagerRefId="Package.ConnectionManagers[Failed Reads Logging]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      externalMetadataColumnId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      dataType="i4"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      name="Flat File Source Error Output Column" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Read Month Names\File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read Month Names\File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Language Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Language Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[Language]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Language]"
                      length="34"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[Language]"
                      name="Language"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Decimal]"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]"
                      name="LCID Decimal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[December]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[December]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[December]"
                      name="December"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[January]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[January]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[January]"
                      name="January"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[February]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[February]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[February]"
                      name="February"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[March]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[March]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[March]"
                      name="March"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[April]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[April]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[April]"
                      name="April"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[May]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[May]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[May]"
                      name="May"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[June]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[June]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[June]"
                      name="June"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[July]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Juliy]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[July]"
                      name="July"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[August]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[August]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[August]"
                      name="August"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[September]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[September]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[September]"
                      name="September"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[October]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[October]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[October]"
                      name="October"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[November]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[November]"
                      length="50"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[November]"
                      name="November"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Hex]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="LCID Hex" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Decimal]"
                      dataType="ui8"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Empty1]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Empty1" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Monday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Monday" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Tuesday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Tuesday" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Wednesday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Wednesday" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Thursday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Thursday" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Friday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Friday" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Saturday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Saturday" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Sunday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Sunday" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Empty2]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Empty2" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[January]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="January" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[February]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="February" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[March]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="March" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[April]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="April" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[May]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="May" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[June]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="June" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Juliy]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Juliy" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[August]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="August" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[September]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="September" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[October]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="October" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[November]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="November" />
                    <externalMetadataColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].ExternalColumns[December]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="December" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Month Names\Lookup Language Code"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup Language Code"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Languages]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Languages]) [refTable]
where [refTable].[DTLG_LanguageName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DTLG_LanguageId" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DTLG_LCID" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DTLG_LanguageName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[Language]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read Month Names\Lookup Language Code.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  connectionManagerRefId="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Month Names\Lookup Language Code.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Lookup Language Code.Inputs[Lookup Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[Language]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DTLG_LanguageName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Read Month Names\Lookup Language Code.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageName]"
                      name="DTLG_LanguageName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DTLG_LanguageName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageId]"
                      dataType="i2"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageId]"
                      name="DTLG_LanguageId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DTLG_LanguageId</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LCID]"
                      dataType="i8"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LCID]"
                      name="DTLG_LCID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DTLG_LCID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Read Month Names\Lookup Language Code.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Read Month Names\Lookup Language Code.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Month Names\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        int month = 0;
      

        if (Row.MonthName == "January")
            month = 1;
        else if (Row.MonthName == "February")
            month = 2;
        else if (Row.MonthName == "March")
            month = 3;
        else if (Row.MonthName == "April")
            month = 4;
        else if (Row.MonthName == "May")
            month = 5;
        else if (Row.MonthName == "June")
            month = 6;
        else if (Row.MonthName == "July")
            month = 7;
        else if (Row.MonthName == "August")
            month = 8;
        else if (Row.MonthName == "September")
            month = 9;
        else if (Row.MonthName == "October")
            month = 10;
        else if (Row.MonthName == "November")
            month = 11;
        else if (Row.MonthName == "December")
            month = 12;

        Row.MonthNum = month;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String NativeMonthName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool NativeMonthName_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String MonthName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool MonthName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String DTLGLanguageName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool DTLGLanguageName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int16 DTLGLanguageId
    {
        get
        {
            return Buffer.GetInt16(BufferColumnIndexes[3]);
        }
    }
    public bool DTLGLanguageId_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public UInt64 LCIDDecimal
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[4]);
        }
    }
    public bool LCIDDecimal_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int64 DTLGLCID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[5]);
        }
    }
    public bool DTLGLCID_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String Language
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool Language_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 MonthNum
    {
        set
        {
            this[7] = value;
        }
    }
    public bool MonthNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties.Settings.get_Default():SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties.Sett" +
    "ings")]

namespace SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_daa269730cdb4f2c8e7b4b341b280b2e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_daa269730cdb4f2c8e7b4b341b280b2e</msb:DisplayName>
		<msb:ProjectId>{1884370D-76CC-4331-8972-13CC4CAEF21C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_daa269730cdb4f2c8e7b4b341b280b2e.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_daa269730cdb4f2c8e7b4b341b280b2e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_daa269730cdb4f2c8e7b4b341b280b2e")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_daa269730cdb4f2c8e7b4b341b280b2e.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6156F91E-D5C4-49C9-B6BA-EB007E8FC54C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_daa269730cdb4f2c8e7b4b341b280b2e</RootNamespace>
    <AssemblyName>SC_daa269730cdb4f2c8e7b4b341b280b2e</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_daa269730cdb4f2c8e7b4b341b280b2e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_daa269730cdb4f2c8e7b4b341b280b2e.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC/C0VoAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAyjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHg2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
NgAAAAAAAEgAAAACAAUAhCMAADwSAAABAAAAAAAAAMA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAJgEAAAEAABEWCgNvCAAA
BnIBAABwKBIAAAosBxcKOAMBAAADbwgAAAZyEQAAcCgSAAAKLAcYCjjqAAAAA28IAAAGciMAAHAo
EgAACiwHGQo40QAAAANvCAAABnIvAABwKBIAAAosBxoKOLgAAAADbwgAAAZyOwAAcCgSAAAKLAcb
CjifAAAAA28IAAAGckMAAHAoEgAACiwHHAo4hgAAAANvCAAABnJNAABwKBIAAAosBB0KK3ADbwgA
AAZyVwAAcCgSAAAKLAQeCitaA28IAAAGcmUAAHAoEgAACiwFHwkKK0MDbwgAAAZyeQAAcCgSAAAK
LAUfCgorLANvCAAABnKJAABwKBIAAAosBR8LCisVA28IAAAGcpsAAHAoEgAACiwDHwwKAwZvFAAA
BioeAigYAAAGKioCAwQFKBMAAAoqUgJ7FAAACgJ7FQAAChaUbxYAAAoqIgIWKBcAAAoqUgJ7FAAA
CgJ7FQAACheUbxYAAAoqIgIXKBcAAAoqUgJ7FAAACgJ7FQAAChiUbxYAAAoqIgIYKBcAAAoqUgJ7
FAAACgJ7FQAAChmUbxgAAAoqIgIZKBcAAAoqUgJ7FAAACgJ7FQAAChqUbxkAAAoqIgIaKBcAAAoq
UgJ7FAAACgJ7FQAAChuUbxoAAAoqIgIbKBcAAAoqUgJ7FAAACgJ7FQAAChyUbxYAAAoqIgIcKBcA
AAoqOgIdA4wbAAABKBsAAAoqWgMsCAIdKBwAAAoqcq0AAHBzHQAACnoeAigeAAAKKh4CKB8AAAoq
fgIoIAAACgICcxwAAAZ9AQAABAICcx0AAAZ9AgAABCqSBHJKAQBwGm8hAAAKLBUCBQIDKCIAAAoO
BHMFAAAGbxoAAAYqSisHAgNvGwAABgNvFgAABi3xKgYqOgIoIwAACgIDfQMAAAQqOgIoIwAACgID
fQQAAAQqHgIoIwAACiqufgUAAAQtHnJaAQBw0AcAAAIoJAAACm8lAAAKcyYAAAqABQAABH4FAAAE
Khp+BgAABCoeAoAGAAAEKhp+BwAABCoeAignAAAKKi5zIwAABoAHAAAEKgBCU0pCAQABAAAAAAAM
AAAAdjQuMC4zMDMxOQAAAAAFAGwAAADABgAAI34AACwHAABcBwAAI1N0cmluZ3MAAAAAiA4AAMwB
AAAjVVMAVBAAABAAAAAjR1VJRAAAAGQQAADYAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoB
MwAWAAABAAAAIAAAAAgAAAAHAAAAJAAAAA8AAAAnAAAAEAAAAAEAAAADAAAAEwAAABQAAAABAAAA
BAAAAAEAAAAAAIMDAQAAAAAABgBqAogFBgD+AogFBgC2AXUFDwD8BQAABgDjAcoEBgBNAsoEBgAu
AsoEBgDlAsoEBgCKAsoEBgCjAsoEBgD6AcoEBgAVAjkDCgC+AgMBCgBHBQMBDgA4BQMBCgATBQMB
CgDCBgMBBgCFBnUEBgCZAXUFBgBYBagFBgAHBbUEEgBpAW0DEgDKAW0DEgBRAaAEBgB+AYgFBgBW
A3UEBgABAHUEBgDcBHUEBgD2BHUEBgAkAXUEBgCeAHUEBgBHB8oEAAAAACMAAAAAAAEAAQABABAA
lQQAABAAAQABAAEAEAArBQAAOQABAAUAAQAQAKQGAABFAAEAGAABABAAeQYAAEkAAwAcAAEAEAA6
BgAASQAEAB0AAAAQAK8FCwZJAAUAHgAAARAAaQYLBmEABwAiAAYAeQaOAAYAOgaSAAEAsgaWAAEA
sgaWABEAiQSaABEAQQGeABEAgQCiAFAgAAAAAMYAHAMGAAEAWCAAAAAAxgAnAwYAAQBgIAAAAADG
ACQHpgABAJIhAAAAAIYYaAUGAAIAmiEAAAAAhhhoBSUAAgClIQAAAACGCOUArAAFALohAAAAAIYI
HgRWAAUAwyEAAAAAhgjXAKwABQDYIQAAAACGCAkEVgAFAOEhAAAAAIYIwgCsAAUA9iEAAAAAhgjt
A1YABQD/IQAAAACGCEoAsAAFABQiAAAAAIYIvwNWAAUAHSIAAAAAhghdA7QABQAyIgAAAACGCDkE
VgAFADsiAAAAAIYILAC4AAUAUCIAAAAAhgirA1YABQBZIgAAAACGCJEArAAFAG4iAAAAAIYI2QNW
AAUAdyIAAAAAhgh8BAEABQCGIgAAAACGCFAEvAAGAJ0iAAAAAIYAOwdWAAcApSIAAAAAhgCMBlYA
BwCtIgAAAACGGGgFBgAHAM0iAAAAAMYAFwfBAAcA8iIAAAAAxgEQB6YACwAFIwAAAADGASQHpgAM
AAcjAAAAAIYYaAXLAA0AFiMAAAAAhhhoBcsADgAlIwAAAACDGGgFBgAPAC0jAAAAAJMIVAXRAA8A
WSMAAAAAkwgpAdYADwBgIwAAAACTCDUB2wAPAGgjAAAAAJYImAbhABAAbyMAAAAAhhhoBQYAEAB3
IwAAAACRGG4F5gAQAAAAAQA/BwAAAQBNBQAAAgBEBgAAAwAhBQAAAQAzAwAAAQAzAwAAAQA5AAAA
AgD5AAAAAwBNBQAABAAhBQAAAQBNBQAAAQA/BwAAAQDIBgAAAQDIBgAAAQAzAwkAaAUBABEAaAUG
ABkAaAUKACkAaAUQADEAaAUQADkAaAUQAEEAaAUQAEkAaAUQAFEAaAUQAFkAaAUQAGEAaAUQAGkA
aAUGAJkAaAUGALkAaAUVAMkAaAUGAIkAHAMGAIkAJwMGANEAUAcfAHEAaAUlAHEATQUvAHEARAYz
AHkAUwM3AHEAXQQ8AHkAGgBBAHkABwBGAHkAEQBLAHEAbARQAHEAZAQBAOEAaAUQAHEAOwdWAHEA
jAZWAIkAaAUGANEAcgZaAIkAWAZhAJEAaAUGAPEAsABnAPEAQwduAKEAaAV0AMEAaAUGAC4ACwAR
AS4AEwAaAS4AGwA5AS4AIwBCAS4AKwBrAS4AMwBrAS4AOwBrAS4AQwBCAS4ASwBxAS4AUwBrAS4A
WwCIAUMAYwDSAeEAewDSAeMAawDSASkCcwA5AUkCcwA5ARsAAwABAAcAEQAIABMAAADpAOoAAAAi
BO4AAADvAOoAAAAoBO4AAADGAOoAAADxA+4AAABOAPIAAADDA+4AAABhA/YAAAA9BO4AAAAwAPoA
AACvA+4AAACVAOoAAADdA+4AAACABP4AAABUBO4AAABYBQIBAABJAQcBAACcBgwBAgAGAAMAAgAH
AAUAAgAIAAcAAgAJAAkAAgAKAAsAAgALAA0AAgAMAA8AAgANABEAAgAOABMAAgAPABUAAgAQABcA
AgARABkAAgASABsAAgATAB0AAQAUAB8AAQAVACEAAgAfACMAAgAgACUAAQAhACUAAgAiACcABIAA
AAEAAAAAAAAAAAAAAAAAXQAAAAQAAAAAAAAAAAAAAHwAQQAAAAAADgAAAAAAAAAAAAAAhQDSBgAA
AAAOAAAAAAAAAAAAAACFAO8GAAAAAAQAAAAAAAAAAAAAAHwAdQQAAAAAAAAAAAEAAAC5BQAAAAAA
SW50MzIAR2V0VUludDY0AEdldEludDY0AEdldEludDE2ADxNb2R1bGU+AGdldF9EVExHTENJRABJ
bnB1dElEAG1zY29ybGliAGdldF9EVExHTGFuZ3VhZ2VJZABTQ19kYWEyNjk3MzBjZGI0ZjJjOGU3
YjRiMzQxYjI4MGIyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0xhbmd1YWdlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9EVExHTGFuZ3VhZ2VOYW1lAGdldF9Nb250aE5hbWUA
Z2V0X05hdGl2ZU1vbnRoTmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJl
RXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0
cmluZwBnZXRfTENJRERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2RhYTI2OTczMGNk
YjRmMmM4ZTdiNGIzNDFiMjgwYjJlLmRsbABnZXRfRFRMR0xDSURfSXNOdWxsAGdldF9EVExHTGFu
Z3VhZ2VJZF9Jc051bGwAZ2V0X0xhbmd1YWdlX0lzTnVsbABnZXRfRFRMR0xhbmd1YWdlTmFtZV9J
c051bGwAZ2V0X01vbnRoTmFtZV9Jc051bGwAZ2V0X05hdGl2ZU1vbnRoTmFtZV9Jc051bGwAZ2V0
X0xDSUREZWNpbWFsX0lzTnVsbABzZXRfTW9udGhOdW1fSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0A
U3lzdGVtAHNldF9Nb250aE51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVy
YXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFw
AE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfZGFhMjY5NzMwY2RiNGYy
YzhlN2I0YjM0MWIyODBiMmUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNDX2RhYTI2OTczMGNkYjRmMmM4ZTdiNGIzNDFiMjgwYjJlLlByb3BlcnRpZXMAVmFy
aWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVh
bHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25l
bnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5w
dXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0
eQAAD0oAYQBuAHUAYQByAHkAABFGAGUAYgByAHUAYQByAHkAAAtNAGEAcgBjAGgAAAtBAHAAcgBp
AGwAAAdNAGEAeQAACUoAdQBuAGUAAAlKAHUAbAB5AAANQQB1AGcAdQBzAHQAABNTAGUAcAB0AGUA
bQBiAGUAcgAAD08AYwB0AG8AYgBlAHIAABFOAG8AdgBlAG0AYgBlAHIAABFEAGUAYwBlAG0AYgBl
AHIAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAg
AHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUA
IAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0
ACAAMAAAcVMAQwBfAGQAYQBhADIANgA5ADcAMwAwAGMAZABiADQAZgAyAGMAOABlADcAYgA0AGIA
MwA0ADEAYgAyADgAMABiADIAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAQ9u9yWjObUq9xRI314MOQgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQgFAAIC
Dg4JIAMBEj0dCBJBAwYSPQMGHQgEIAEOCAQgAQIIBCABBggEIAELCAQgAQoIBSACAQgcAyAAAgYg
AgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYS
GAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAOAyAABgMgAAsDIAAKBCABAQIJIAQBCA4SPRJBBSAB
ARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAA4DKAACAygABgMoAAsDKAAKAygACAQIABJR
BAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfZGFhMjY5NzMwY2RiNGYyYzhlN2I0YjM0MWIyODBiMmUAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAoDYAAAAA
AAAAAAAAujYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKw2AAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZABhAGEAMgA2ADkANwAzADAAYwBkAGIANABmADIAYwA4AGUANwBiADQAYgAzADQAMQBi
ADIAOAAwAGIAMgBlAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBkAGEAYQAyADYAOQA3
ADMAMABjAGQAYgA0AGYAMgBjADgAZQA3AGIANABiADMANAAxAGIAMgA4ADAAYgAyAGUALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGQAYQBh
ADIANgA5ADcAMwAwAGMAZABiADQAZgAyAGMAOABlADcAYgA0AGIAMwA0ADEAYgAyADgAMABiADIA
ZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBkAGEAYQAy
ADYAOQA3ADMAMABjAGQAYgA0AGYAMgBjADgAZQA3AGIANABiADMANAAxAGIAMgA4ADAAYgAyAGUA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_daa269730cdb4f2c8e7b4b341b280b2e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">3F</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read Month Names\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Script Component.Inputs[Input 0].Columns[NativeMonthName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="NativeMonthName"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Script Component.Inputs[Input 0].Columns[MonthName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MonthName"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Script Component.Inputs[Input 0].Columns[DTLG_LanguageName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DTLG_LanguageName"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageName]" />
                    <inputColumn
                      refId="Package\Read Month Names\Script Component.Inputs[Input 0].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageId]" />
                    <inputColumn
                      refId="Package\Read Month Names\Script Component.Inputs[Input 0].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[LCID Decimal]" />
                    <inputColumn
                      refId="Package\Read Month Names\Script Component.Inputs[Input 0].Columns[DTLG_LCID]"
                      cachedDataType="i8"
                      cachedName="DTLG_LCID"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LCID]" />
                    <inputColumn
                      refId="Package\Read Month Names\Script Component.Inputs[Input 0].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[Language]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Month Names\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read Month Names\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\Script Component.Outputs[Output 0].Columns[MonthNum]"
                      dataType="i4"
                      lineageId="Package\Read Month Names\Script Component.Outputs[Output 0].Columns[MonthNum]"
                      name="MonthNum" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Month Names\Unpivot Month Names"
              componentClassID="Microsoft.UnPivot"
              contactInfo="Unpivot;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Expands an un-normalized data flow into a more normalized version. Values from multiple columns of a single record expand to multiple records in a single column. For example, expand a table that lists athletic scores with a column for each game to more records and a single score column."
              name="Unpivot Month Names">
              <inputs>
                <input
                  refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input]"
                  hasSideEffects="true"
                  name="Unpivot Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[December]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="December"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[December]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">December</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[January]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="January"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[January]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">January</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[February]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="February"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[February]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">February</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[March]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="March"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[March]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">March</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[April]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="April"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[April]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">April</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[May]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="May"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[May]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">May</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[June]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="June"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[June]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">June</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[July]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="July"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[July]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">July</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[August]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="August"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[August]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">August</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[September]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="September"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[September]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">September</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[October]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="October"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[October]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">October</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[November]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="November"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[November]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">November</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[Language]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[Language]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      lineageId="Package\Read Month Names\File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[LCID Decimal]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[DTLG_LanguageName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DTLG_LanguageName"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageName]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageId]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input].Columns[DTLG_LCID]"
                      cachedDataType="i8"
                      cachedName="DTLG_LCID"
                      lineageId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LCID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LCID]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output]"
                  name="Unpivot Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[MonthName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[MonthName]"
                      name="MonthName">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">true</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[NativeMonthName]"
                      name="NativeMonthName">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[Language]"
                      dataType="wstr"
                      length="34"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[Language]"
                      name="Language">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[LCID Decimal]"
                      dataType="ui8"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[LCID Decimal]"
                      name="LCID Decimal">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageName]"
                      name="DTLG_LanguageName">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageId]"
                      dataType="i2"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LanguageId]"
                      name="DTLG_LanguageId">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LCID]"
                      dataType="i8"
                      lineageId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output].Columns[DTLG_LCID]"
                      name="DTLG_LCID">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Read Month Names.Paths[Flat File Source Error Output]"
              endId="Package\Read Month Names\Failed Reads.Inputs[Input 0]"
              name="Flat File Source Error Output"
              startId="Package\Read Month Names\File Source.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Read Month Names.Paths[Flat File Source Output]"
              endId="Package\Read Month Names\Lookup Language Code.Inputs[Lookup Input]"
              name="Flat File Source Output"
              startId="Package\Read Month Names\File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Read Month Names.Paths[Lookup Match Output]"
              endId="Package\Read Month Names\Unpivot Month Names.Inputs[Unpivot Input]"
              name="Lookup Match Output"
              startId="Package\Read Month Names\Lookup Language Code.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Read Month Names.Paths[OLE DB Destination Error Output]"
              endId="Package\Read Month Names\Failed Inserts.Inputs[Input 0]"
              name="OLE DB Destination Error Output"
              startId="Package\Read Month Names\Database Destination.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\Read Month Names.Paths[Output 0]"
              endId="Package\Read Month Names\Failed Reads Logging.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\Read Month Names\Failed Reads.Outputs[Output 0]" />
            <path
              refId="Package\Read Month Names.Paths[Output 01]"
              endId="Package\Read Month Names\Database Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Read Month Names\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Read Month Names.Paths[Output 02]"
              endId="Package\Read Month Names\Failed Months Log.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\Read Month Names\Failed Inserts.Outputs[Output 0]" />
            <path
              refId="Package\Read Month Names.Paths[Unpivot Output]"
              endId="Package\Read Month Names\Script Component.Inputs[Input 0]"
              name="Unpivot Output"
              startId="Package\Read Month Names\Unpivot Month Names.Outputs[Unpivot Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Read Weekday Names"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{E5E1C2B4-266A-404E-B54C-80879F491F6B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Read Weekday Names"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Read Weekday Names\Database Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Database Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WeekDays]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read Weekday Names\Database Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  connectionManagerRefId="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      externalMetadataColumnId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTWD_LanguageId]"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageId]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].Columns[DayName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DayName"
                      externalMetadataColumnId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTWD_WeekDayName]"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].Columns[WeekDayNum]"
                      cachedDataType="i4"
                      cachedName="WeekDayNum"
                      externalMetadataColumnId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTWD_WeekDayNum]"
                      lineageId="Package\Read Weekday Names\Find WeekDayNum.Outputs[Output 0].Columns[WeekDayNum]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTWD_WeekDayNum]"
                      dataType="ui1"
                      name="DTWD_WeekDayNum" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTWD_LanguageId]"
                      dataType="i2"
                      name="DTWD_LanguageId" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input].ExternalColumns[DTWD_WeekDayName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DTWD_WeekDayName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Weekday Names\Failed Inserts"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Failed Inserts"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Language
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Language_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public UInt64 LCIDDecimal
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[3]);
        }
    }
    public bool LCIDDecimal_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Settings.get_Default():SC_7691bf9f2214435b88b8d41846d08951.Properties.Sett" +
    "ings")]

namespace SC_7691bf9f2214435b88b8d41846d08951.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7691bf9f2214435b88b8d41846d08951.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6869eaaa-ff66-45ee-8508-6772ae96726d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7691bf9f2214435b88b8d41846d08951</RootNamespace>
    <AssemblyName>SC_4F6EF701EC37438CB8088B302A50B4B1</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7691bf9f2214435b88b8d41846d08951" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7691bf9f2214435b88b8d41846d08951</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7691bf9f2214435b88b8d41846d08951</msb:DisplayName>
		<msb:ProjectId>{1118D753-9EDE-4F97-92AB-C20799F95CDE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7691bf9f2214435b88b8d41846d08951.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7691bf9f2214435b88b8d41846d08951")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7691bf9f2214435b88b8d41846d08951")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7691bf9f2214435b88b8d41846d08951.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7691bf9f2214435b88b8d41846d08951.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4F6EF701EC37438CB8088B302A50B4B1.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMB50FoAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAABjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAADBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADo
MwAAAAAAAEgAAAACAAUADCIAAPAQAAABAAAAAAAAAPwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvBgAABm8TAAAK
bw4AAAYqHgIoEgAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKlIC
exUAAAoCexYAAAoXlG8XAAAKKiICFygYAAAKKlICexUAAAoCexYAAAoYlG8ZAAAKKiICGCgYAAAK
KlICexUAAAoCexYAAAoZlG8aAAAKKiICGSgYAAAKKiYCGgMoGwAACipaAywIAhooHAAACipyAQAA
cHMdAAAKeh4CKB4AAAoqHgIoHwAACip+AiggAAAKAgJzFgAABn0BAAAEAgJzFwAABn0CAAAEKpIE
cp4AAHAabyEAAAosFQIFAgMoIgAACg4EcwUAAAZvFAAABipKKwcCA28VAAAGA28QAAAGLfEqBio6
AigjAAAKAgN9AwAABCo6AigjAAAKAgN9BAAABCoeAigjAAAKKq5+BQAABC0ecq4AAHDQBwAAAigk
AAAKbyUAAApzJgAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCcAAAoqLnMd
AAAGgAcAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAADQGAAAjfgAAoAYA
AFwHAAAjU3RyaW5ncwAAAAD8DQAAIAEAACNVUwAcDwAAEAAAACNHVUlEAAAALA8AAMQBAAAjQmxv
YgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAgAAAACAAAAAcAAAAeAAAADwAAACcAAAAQ
AAAAAwAAAA0AAAAOAAAAAQAAAAUAAAABAAAAAABaAwEAAAAAAAYAQQKSBQYA1QKSBQYAjQF/BQ8A
BgYAAAYAugFeBAYAJAJeBAYABQJeBAYAvAJeBAYAYQJeBAYAegJeBAYA0QFeBAYA7AEQAwoAlQLa
AAoAKAXaAA4AGQXaAAoA0ATaAAoAzAbaAAYAjwYGBAYAcAF/BQYAOQWyBQYAxARJBBIAQAFEAxIA
oQFEAxIAKAE0BAYAVQGSBRYAAQBJBQYAcAQGBAYALQMGBAYAswQGBAYA+wAGBAYArAAGBAYAUQde
BAAAAABRAAAAAAABAAEAAQAQABkEAAAQAAEAAQABABAADAUAADkAAQAFAAEAEACuBgAARQABABIA
AQAQAIMGAABJAAMAFgABABAARAYAAEkABAAXAAAAEAC5BRUGSQAFABgAAAEQAHMGFQZhAAcAHAAG
AIMGhAAGAEQGiAABALwGjAABALwGjAARAA0EkAARABgBlAARAIEAmABQIAAAAADGAPMCBgABAFgg
AAAAAMYA/gIGAAEAYCAAAAAAxgAuB5wAAQB5IAAAAACGGHIFBgACAIEgAAAAAIYYcgUlAAIAjCAA
AAAAhgiRAKIABQChIAAAAACGCIIDTAAFAKogAAAAAIYIJASiAAUAvyAAAAAAhgjCA0wABQDIIAAA
AACGCJ8ApgAFAN0gAAAAAIYIlwNMAAUA5iAAAAAAhgg0A6oABQD7IAAAAACGCKsDTAAFAAQhAAAA
AIYIigQQAAUADiEAAAAAhgjZA64ABgAlIQAAAACGAEUHTAAHAC0hAAAAAIYAlgZMAAcANSEAAAAA
hhhyBQYABwBVIQAAAADGACEHswAHAHohAAAAAMYBGgecAAsAjSEAAAAAxgEuB5wADACPIQAAAACG
GHIFvQANAJ4hAAAAAIYYcgW9AA4ArSEAAAAAgxhyBQYADwC1IQAAAACTCDUFwwAPAOEhAAAAAJMI
AAHIAA8A6CEAAAAAkwgMAc0ADwDwIQAAAACWCKIG0wAQAPchAAAAAIYYcgUGABAA/yEAAAAAkRh4
BdgAEAAAAAEASQcAAAEALgUAAAIATgYAAAMA3gQAAAEACgMAAAEACgMAAAEAWgAAAAIA0AAAAAMA
LgUAAAQA3gQAAAEALgUAAAEASQcAAAEA0gYAAAEA0gYAAAEACgMJAHIFAQARAHIFBgAZAHIFCgAp
AHIFEAAxAHIFEAA5AHIFEABBAHIFEABJAHIFEABRAHIFEABZAHIFEABhAHIFEABpAHIFBgCZAHIF
BgC5AHIFFQDJAHIFBgCJAPMCBgCJAP4CBgCJAGIAGwDRAJ8EIABxAHIFJQBxAC4FLwBxAE4GMwB5
AD4ANwBxAO4DPAB5ACoDIAB5AEcAQQBxAP0DRgBxAPUDAQDZAHIFEABxAEUHTABxAJYGTACJAHIF
BgDhAHwGUACJAGIGVwCRAHIFBgDxAL4AXQDxAE0HZAChAHIFagDBAHIFBgAuAAsA+wAuABMABAEu
ABsAIwEuACMALAEuACsAVQEuADMAVQEuADsAVQEuAEMALAEuAEsAWwEuAFMAVQEuAFsAcgFDAGMA
vAHhAHsAvAHjAGsAvAFpAXMAIwGJAXMAIwEDAAEABwALAAgADQAAAJUA3AAAAIYD4AAAACgE3AAA
AMYD4AAAAKMA5AAAAJsD4AAAADgD6AAAAK8D4AAAAKIE5AAAAN0D4AAAADkF7AAAACAB8QAAAKYG
9gACAAYAAwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQABAA4AEwAB
AA8AFQACABkAFwACABoAGQABABsAGQACABwAGwAEgAAAAQAAAAAAAAAAAAAAAAAaAAAABAAAAAAA
AAAAAAAAcgB4AAAAAAAOAAAAAAAAAAAAAAB7ANwGAAAAAA4AAAAAAAAAAAAAAHsA+QYAAAAABAAA
AAAAAAAAAAAAcgAGBAAAAAAOAAAAAAAAAAAAAAB7AOgEAAAAAAAAAAABAAAAwwUAAAAAAAAASURU
U0NvbXBvbmVudE1ldGFEYXRhMTAwAFNDXzRGNkVGNzAxRUMzNzQzOENCODA4OEIzMDJBNTBCNEIx
AEdldEludDMyAEdldFVJbnQ2NAA8TW9kdWxlPgBJbnB1dElEAGdldF9Db21wb25lbnRNZXRhRGF0
YQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAZ2V0X0Vycm9yQ29kZQBnZXRfTGFuZ3VhZ2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBHZXRTdHJpbmcAZ2V0X0xDSUREZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
Q180RjZFRjcwMUVDMzc0MzhDQjgwODhCMzAyQTUwQjRCMS5kbGwAZ2V0X0Vycm9yQ29kZV9Jc051
bGwAZ2V0X0xhbmd1YWdlX0lzTnVsbABnZXRfTENJRERlY2ltYWxfSXNOdWxsAGdldF9FcnJvckNv
bHVtbl9Jc051bGwAc2V0X0Vycm9yRGVzY3JpcHRpb25fSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0A
U3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AZ2V0X0Vycm9yQ29sdW1uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24Ac2V0X0Vycm9yRGVzY3JpcHRpb24AR2V0RXJyb3JEZXNjcmlwdGlv
bgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1
ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzc2OTFiZjlm
MjIxNDQzNWI4OGI4ZDQxODQ2ZDA4OTUxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBE
ZWJ1Z2dpbmdNb2RlcwBTQ183NjkxYmY5ZjIyMTQ0MzViODhiOGQ0MTg0NmQwODk1MS5Qcm9wZXJ0
aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGlu
Z3MARXF1YWxzAENvbm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2Vy
Q29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNl
cnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJv
Y2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAA
gJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBl
AHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQA
bwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAw
AABxUwBDAF8ANwA2ADkAMQBiAGYAOQBmADIAMgAxADQANAAzADUAYgA4ADgAYgA4AGQANAAxADgA
NAA2AGQAMAA4ADkANQAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AADRT9UFN4bwSa+wU2MA6LsMAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZBCAAEmkEIAEOCAkg
AwESPR0IEkEDBhI9AwYdCAQgAQgIBCABAggEIAELCAUgAgEIHAMgAAIGIAICDhF1BSABHQgIBgAB
EnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJFAwYSUQMGElUD
BhIgBSABARIMAyAACAMgAA4DIAALBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQES
VQQAABIgAwAAAQMoAAgDKAACAygADgMoAAsECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzc2OTFiZjlmMjIxNDQzNWI4
OGI4ZDQxODQ2ZDA4OTUxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC41BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA3DMAAAAAAAAAAAAA9jMAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAOgzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADcANgA5ADEAYgBmADkAZgAyADIAMQA0ADQAMwA1AGIAOAA4AGIAOABkADQAMQA4ADQA
NgBkADAAOAA5ADUAMQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANABGADYARQBGADcA
MAAxAEUAQwAzADcANAAzADgAQwBCADgAMAA4ADgAQgAzADAAMgBBADUAMABCADQAQgAxAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA0AEYA
NgBFAEYANwAwADEARQBDADMANwA0ADMAOABDAEIAOAAwADgAOABCADMAMAAyAEEANQAwAEIANABC
ADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwA2ADkA
MQBiAGYAOQBmADIAMgAxADQANAAzADUAYgA4ADgAYgA4AGQANAAxADgANAA2AGQAMAA4ADkANQAx
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAINAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4f6ef701ec37438cb8088b302a50b4b1</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">3E</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Failed Inserts.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts.Inputs[Input 0].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[Language]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts.Inputs[Input 0].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[LCID Decimal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Weekday Names\Failed Inserts.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read Weekday Names\Failed Inserts.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\Failed Inserts.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read Weekday Names\Failed Inserts.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Weekday Names\Failed Inserts Logging"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1035"
              name="Failed Inserts Logging">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">false</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Read Weekday Names\Failed Inserts Logging.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Failed Language Inserts]"
                  connectionManagerRefId="Package.ConnectionManagers[Failed Language Inserts]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[DTLG_LCID]"
                      cachedDataType="i8"
                      cachedName="DTLG_LCID"
                      externalMetadataColumnId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LCID]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      externalMetadataColumnId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      dataType="ui8"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      name="ErrorDescription" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[MonthName]"
                      dataType="wstr"
                      length="50"
                      name="MonthName" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LanguageName]"
                      dataType="wstr"
                      length="50"
                      name="DTLG_LanguageName" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LanguageId]"
                      dataType="i2"
                      name="DTLG_LanguageId" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[DTLG_LCID]"
                      dataType="i8"
                      name="DTLG_LCID" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input].ExternalColumns[MonthNum]"
                      dataType="i4"
                      name="MonthNum" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Read Weekday Names\Failed Reads"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Failed Reads"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn FlatFileSourceErrorOutputColumn
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool FlatFileSourceErrorOutputColumn_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Settings.get_Default():SC_c77552adc36c4e0094c007736d063241.Properties.Sett" +
    "ings")]

namespace SC_c77552adc36c4e0094c007736d063241.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c77552adc36c4e0094c007736d063241.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c77552adc36c4e0094c007736d063241.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c77552adc36c4e0094c007736d063241.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_c77552adc36c4e0094c007736d063241</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_c77552adc36c4e0094c007736d063241</msb:DisplayName>
		<msb:ProjectId>{7CD990C3-0EE6-4B49-B250-105526CB9B2D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_c77552adc36c4e0094c007736d063241.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c77552adc36c4e0094c007736d063241")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c77552adc36c4e0094c007736d063241")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c77552adc36c4e0094c007736d063241.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{05b1630b-7d57-4c02-8082-20fb4d148af9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c77552adc36c4e0094c007736d063241</RootNamespace>
    <AssemblyName>SC_ECF83A5007DA48A28288D44A399DEE56</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_c77552adc36c4e0094c007736d063241" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ECF83A5007DA48A28288D44A399DEE56.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPISyloAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAwjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHAzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAyBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACk
MwAAAAAAAEgAAAACAAUA9CEAAMQQAAABAAAAAAAAALgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvCAAABm8TAAAK
bwwAAAYqHgIoEAAABioqAgMEBSgUAAAKKmYCexUAAAoCexYAAAoWlG8XAAAKdBEAAAEqIgIWKBgA
AAoqUgJ7FQAACgJ7FgAACheUbxkAAAoqIgIXKBgAAAoqUgJ7FQAACgJ7FgAAChiUbxkAAAoqIgIY
KBgAAAoqJgIZAygaAAAKKloDLAgCGSgbAAAKKnIBAABwcxwAAAp6HgIoHQAACioeAigeAAAKKn4C
KB8AAAoCAnMUAAAGfQEAAAQCAnMVAAAGfQIAAAQqkgRyngAAcBpvIAAACiwVAgUCAyghAAAKDgRz
BQAABm8SAAAGKkorBwIDbxMAAAYDbw4AAAYt8SoGKjoCKCIAAAoCA30DAAAEKjoCKCIAAAoCA30E
AAAEKh4CKCIAAAoqrn4FAAAELR5yrgAAcNAHAAACKCMAAApvJAAACnMlAAAKgAUAAAR+BQAABCoa
fgYAAAQqHgKABgAABCoafgcAAAQqHgIoJgAACioucxsAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAAAGAAAjfgAAbAYAAGgHAAAjU3RyaW5ncwAAAADUDQAAIAEA
ACNVUwD0DgAAEAAAACNHVUlEAAAABA8AAMABAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEz
ABYAAAEAAAAhAAAACAAAAAcAAAAcAAAADwAAACYAAAAQAAAAAwAAAAsAAAAMAAAAAQAAAAUAAAAB
AAAAAAAwAwEAAAAAAAYAKgKgBQYAvgKgBQYAdgGNBQ8AFAYAAAYAowFsBAYADQJsBAYA7gFsBAYA
pQJsBAYASgJsBAYAYwJsBAYAugFsBAYA1QH5AgoAfgLDAAoANgXDAA4AJwXDAAoA3gTDAA4AAwTD
AAoA2gbDAAYAnQblAwYAWQGNBQYARwXABQYA0gRXBBIAKQEaAxIAigEaAxIAEQFCBAYAPgGgBRYA
AQBXBQYAfgTlAwYAEwPlAwYAwQTlAwYA5ADlAwYAlQDlAwYAXwdsBAAAAABHAAAAAAABAAEAAQAQ
APgDAAAQAAEAAQABABAAGgUAADkAAQAFAAEAEAC8BgAASQABABAAAQAQAJEGAABNAAMAFAABABAA
UgYAAE0ABAAVAAAAEADHBSMGTQAFABYAAAEQAIEGIwZlAAcAGgAGAJEGhQAGAFIGiQABAMoGjQAB
AMoGjQARAOwDkQARAAEBlQARAHcAmQBQIAAAAADGANwCBgABAFggAAAAAMYA5wIGAAEAYCAAAAAA
xgA8B50AAQB5IAAAAACGGIAFBgACAIEgAAAAAIYYgAUlAAIAjCAAAAAAhggeBKMABQCmIAAAAACG
CIQDTAAFAK8gAAAAAIYIhwCoAAUAxCAAAAAAhghYA0wABQDNIAAAAACGCA4EqAAFAOIgAAAAAIYI
bQNMAAUA6yAAAAAAhgiYBBAABQD1IAAAAACGCK8DrAAGAAwhAAAAAIYAUwdMAAcAFCEAAAAAhgCk
BkwABwAcIQAAAACGGIAFBgAHADwhAAAAAMYALwexAAcAYSEAAAAAxgEoB50ACwB0IQAAAADGATwH
nQAMAHYhAAAAAIYYgAW7AA0AhSEAAAAAhhiABbsADgCUIQAAAACDGIAFBgAPAJwhAAAAAJMIQwXB
AA8AyCEAAAAAkwjpAMYADwDPIQAAAACTCPUAywAPANchAAAAAJYIsAbRABAA3iEAAAAAhhiABQYA
EADmIQAAAACRGIYF1gAQAAAAAQBXBwAAAQA8BQAAAgBcBgAAAwDsBAAAAQDzAgAAAQDzAgAAAQBQ
AAAAAgC5AAAAAwA8BQAABADsBAAAAQA8BQAAAQBXBwAAAQDgBgAAAQDgBgAAAQDzAgkAgAUBABEA
gAUGABkAgAUKACkAgAUQADEAgAUQADkAgAUQAEEAgAUQAEkAgAUQAFEAgAUQAFkAgAUQAGEAgAUQ
AGkAgAUGAKEAgAUGAMEAgAUVANEAgAUGAJEA3AIGAJEA5wIGAJEAWAAbANkArQQgAHEAgAUlAHEA
PAUvAHEAXAYzAHkA0wM3AHEAxAM8AHkAGgBBAHEA3ANGAHEAywMBAOEAgAUQAHEAUwdMAHEApAZM
AJEAgAUGAOkAigZQAJEAcAZXAJkAgAUGAPkApwBdAPkAWwdlAKkAgAVrAMkAgAUGAC4ACwD6AC4A
EwADAS4AGwAiAS4AIwArAS4AKwBUAS4AMwBUAS4AOwBUAS4AQwArAS4ASwBaAS4AUwBUAS4AWwBx
AUMAYwC7AeEAewC7AeMAawC7ASkBcwAiAUkBcwAiAQMAAQAHAAkACAALAAAAIgTaAAAAiAPfAAAA
iwDjAAAAXAPfAAAAEgTjAAAAcQPfAAAAsATnAAAAswPfAAAARwXrAAAACQHwAAAAtAb1AAIABgAD
AAIABwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAEADAAPAAEADQARAAIAFwATAAIAGAAVAAEA
GQAVAAIAGgAXAASAAAABAAAAAAAAAAAAAAAAACMAAAAEAAAAAAAAAAAAAABzAG4AAAAAAA4AAAAA
AAAAAAAAAHwA6gYAAAAADgAAAAAAAAAAAAAAfAAHBwAAAAAEAAAAAAAAAAAAAABzAOUDAAAAAA4A
AAAAAAAAAAAAAHwA9gQAAAAAAAAAAAEAAADRBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGEx
MDAAR2V0SW50MzIAU0NfRUNGODNBNTAwN0RBNDhBMjgyODhENDRBMzk5REVFNTYAPE1vZHVsZT4A
SW5wdXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdl
dF9FcnJvckNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX0VD
RjgzQTUwMDdEQTQ4QTI4Mjg4RDQ0QTM5OURFRTU2LmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABn
ZXRfRXJyb3JDb2x1bW5fSXNOdWxsAGdldF9GbGF0RmlsZVNvdXJjZUVycm9yT3V0cHV0Q29sdW1u
X0lzTnVsbABzZXRfRXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBCbG9iQ29sdW1uAGdldF9FcnJvckNv
bHVtbgBnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENvbHVtbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEdldEVycm9yRGVzY3JpcHRpb24AU3Ry
aW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIA
U2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19jNzc1NTJhZGMzNmM0
ZTAwOTRjMDA3NzM2ZDA2MzI0MS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU0NfYzc3NTUyYWRjMzZjNGUwMDk0YzAwNzczNmQwNjMyNDEuUHJvcGVydGllcwBW
YXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVx
dWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
VHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJ
bnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AACAm0kAcwBO
AHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQA
bwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABo
AGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMA
XwBjADcANwA1ADUAMgBhAGQAYwAzADYAYwA0AGUAMAAwADkANABjADAAMAA3ADcAMwA2AGQAMAA2
ADMAMgA0ADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAPNUw8+x
We5CpN6QIb3GmnwABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0EIAASbQQgAQ4ICSADARI9HQgS
QQMGEj0DBh0IBCABHAgEIAECCAQgAQgIBSACAQgcAyAAAgYgAgIOEXkFIAEdCAgHAAESfRGAgQUg
ABKAhQcgAgEOEoCFCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJJAwYSVQMGElkDBhIgBSAB
ARIMBCAAEkUDIAAIBCABAQIJIAQBCA4SPRJBBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAA
AQQoABJFAygAAgMoAAgDKAAOBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19jNzc1NTJhZGMzNmM0ZTAwOTRjMDA3NzM2
ZDA2MzI0MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQB
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAJgzAAAAAAAAAAAAALIzAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACk
MwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBjADcANwA1ADUAMgBhAGQAYwAzADYAYwA0AGUAMAAwADkANABjADAAMAA3ADcAMwA2
AGQAMAA2ADMAMgA0ADEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAEUAQwBGADgAMwBB
ADUAMAAwADcARABBADQAOABBADIAOAAyADgAOABEADQANABBADMAOQA5AEQARQBFADUANgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ARQBD
AEYAOAAzAEEANQAwADAANwBEAEEANAA4AEEAMgA4ADIAOAA4AEQANAA0AEEAMwA5ADkARABFAEUA
NQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGMANwA3
ADUANQAyAGEAZABjADMANgBjADQAZQAwADAAOQA0AGMAMAAwADcANwAzADYAZAAwADYAMwAyADQA
MQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAxDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_ecf83a5007da48a28288d44a399dee56</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">15</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Failed Reads.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Reads.Inputs[Input 0].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Reads.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Reads.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Weekday Names\Failed Reads.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read Weekday Names\Failed Reads.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\Failed Reads.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read Weekday Names\Failed Reads.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Weekday Names\Failed Reads Logging"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1035"
              name="Failed Reads Logging">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">false</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Read Weekday Names\Failed Reads Logging.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Failed Reads Logging]"
                  connectionManagerRefId="Package.ConnectionManagers[Failed Reads Logging]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      externalMetadataColumnId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[LCID Decimal]"
                      dataType="i4"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      name="Flat File Source Error Output Column" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Read Weekday Names\File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read Weekday Names\File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Language Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Language Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Language]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Language]"
                      length="34"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Language]"
                      name="Language"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Decimal]"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]"
                      name="LCID Decimal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Monday]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Monday]"
                      length="50"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Monday]"
                      name="Monday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Tuesday]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Tuesday]"
                      length="50"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Tuesday]"
                      name="Tuesday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Wednesday]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Wednesday]"
                      length="50"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Wednesday]"
                      name="Wednesday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Thursday]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Thursday]"
                      length="50"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Thursday]"
                      name="Thursday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Friday]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Friday]"
                      length="50"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Friday]"
                      name="Friday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Saturday]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Saturday]"
                      length="50"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Saturday]"
                      name="Saturday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Sunday]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Sunday]"
                      length="50"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Sunday]"
                      name="Sunday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Language]"
                      dataType="wstr"
                      length="34"
                      name="Language" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Hex]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="LCID Hex" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[LCID Decimal]"
                      dataType="ui8"
                      name="LCID Decimal" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Empty1]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Empty1" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Monday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Monday" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Tuesday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Tuesday" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Wednesday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Wednesday" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Thursday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Thursday" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Friday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Friday" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Saturday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Saturday" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Sunday]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Sunday" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Empty2]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Empty2" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[January]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="January" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[February]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="February" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[March]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="March" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[April]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="April" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[May]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="May" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[June]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="June" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[Juliy]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Juliy" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[August]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="August" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[September]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="September" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[October]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="October" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[November]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="November" />
                    <externalMetadataColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].ExternalColumns[December]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="December" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Weekday Names\Find WeekDayNum"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Find WeekDayNum"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    public override void PreExecute()
    {
        base.PreExecute();
    }

    public override void PostExecute()
    {
        base.PostExecute();
    }
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        int weekdaynum = 0;

        if (Row.DayOfWeekName == "Sunday")
            weekdaynum = 1;
        else if (Row.DayOfWeekName == "Monday")
            weekdaynum = 2;
        else if (Row.DayOfWeekName == "Tuesday")
            weekdaynum = 3;
        else if (Row.DayOfWeekName == "Wednesday")
            weekdaynum = 4;
        else if (Row.DayOfWeekName == "Thursday")
            weekdaynum = 5;
        else if (Row.DayOfWeekName == "Friday")
            weekdaynum = 6;
        else if (Row.DayOfWeekName == "Saturday")
            weekdaynum = 7;

        Row.WeekDayNum = weekdaynum;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DayOfWeekName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool DayOfWeekName_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public UInt64 LCIDDecimal
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[1]);
        }
    }
    public bool LCIDDecimal_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String DTLGLanguageName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool DTLGLanguageName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int16 DTLGLanguageId
    {
        get
        {
            return Buffer.GetInt16(BufferColumnIndexes[3]);
        }
    }
    public bool DTLGLanguageId_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int64 DTLGLCID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[4]);
        }
    }
    public bool DTLGLCID_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String DayName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool DayName_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String Language
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool Language_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 WeekDayNum
    {
        set
        {
            this[7] = value;
        }
    }
    public bool WeekDayNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_83ab4268911d4300ac770bde2748967a.Properties.Settings.get_Default():SC_83ab4268911d4300ac770bde2748967a.Properties.Sett" +
    "ings")]

namespace SC_83ab4268911d4300ac770bde2748967a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_83ab4268911d4300ac770bde2748967a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{03911773-F1B7-4B1C-8397-AC6F5689C264}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_83ab4268911d4300ac770bde2748967a</RootNamespace>
    <AssemblyName>SC_83ab4268911d4300ac770bde2748967a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_83ab4268911d4300ac770bde2748967a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_83ab4268911d4300ac770bde2748967a</msb:DisplayName>
		<msb:ProjectId>{8B030F6F-87EB-4D00-A7A4-7F0240E9704D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_83ab4268911d4300ac770bde2748967a.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:Breakpoint Include="acfe5c057486463ab7dd4536b400d707">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>22</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_83ab4268911d4300ac770bde2748967a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_83ab4268911d4300ac770bde2748967a")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_83ab4268911d4300ac770bde2748967a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_83ab4268911d4300ac770bde2748967a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_83ab4268911d4300ac770bde2748967a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_83ab4268911d4300ac770bde2748967a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_83ab4268911d4300ac770bde2748967a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_83ab4268911d4300ac770bde2748967a.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPN80FoAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAADjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALw1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
NQAAAAAAAEgAAAACAAUABCMAAAASAAABAAAAAAAAAAQ1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIApQAAAAEAABEWCgNvBgAA
BnIBAABwKBIAAAosBxcKOIIAAAADbwYAAAZyDwAAcCgSAAAKLAQYCitsA28GAAAGch0AAHAoEgAA
CiwEGQorVgNvBgAABnItAABwKBIAAAosBBoKK0ADbwYAAAZyQQAAcCgSAAAKLAQbCisqA28GAAAG
clMAAHAoEgAACiwEHAorFANvBgAABnJhAABwKBIAAAosAh0KAwZvFAAABioeAigYAAAGKioCAwQF
KBMAAAoqUgJ7FAAACgJ7FQAAChaUbxYAAAoqIgIWKBcAAAoqUgJ7FAAACgJ7FQAACheUbxgAAAoq
IgIXKBcAAAoqUgJ7FAAACgJ7FQAAChiUbxYAAAoqIgIYKBcAAAoqUgJ7FAAACgJ7FQAAChmUbxkA
AAoqIgIZKBcAAAoqUgJ7FAAACgJ7FQAAChqUbxoAAAoqIgIaKBcAAAoqUgJ7FAAACgJ7FQAAChuU
bxYAAAoqIgIbKBcAAAoqUgJ7FAAACgJ7FQAAChyUbxYAAAoqIgIcKBcAAAoqOgIdA4wbAAABKBsA
AAoqWgMsCAIdKBwAAAoqcnMAAHBzHQAACnoeAigeAAAKKh4CKB8AAAoqfgIoIAAACgICcxwAAAZ9
AQAABAICcx0AAAZ9AgAABCqSBHIQAQBwGm8hAAAKLBUCBQIDKCIAAAoOBHMFAAAGbxoAAAYqSisH
AgNvGwAABgNvFgAABi3xKgYqOgIoIwAACgIDfQMAAAQqOgIoIwAACgIDfQQAAAQqHgIoIwAACiqu
fgUAAAQtHnIgAQBw0AcAAAIoJAAACm8lAAAKcyYAAAqABQAABH4FAAAEKhp+BgAABCoeAoAGAAAE
Khp+BwAABCoeAignAAAKKi5zIwAABoAHAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkA
AAAABQBsAAAAwAYAACN+AAAsBwAAWAcAACNTdHJpbmdzAAAAAIQOAACUAQAAI1VTABgQAAAQAAAA
I0dVSUQAAAAoEAAA2AEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACAAAAAI
AAAABwAAACQAAAAPAAAAJwAAABAAAAABAAAAAwAAABMAAAAUAAAAAQAAAAQAAAABAAAAAAB/AwEA
AAAAAAYAZgKEBQYA+gKEBQYAsgFxBQ8A+AUAAAYA3wHGBAYASQLGBAYAKgLGBAYA4QLGBAYAhgLG
BAYAnwLGBAYA9gHGBAYAEQI1AwoAugL/AAoAQwX/AA4ANAX/AAoADwX/AAoAvgb/AAYAgQZvBAYA
lQFxBQYAVAWkBQYAAwWxBBIAZQFpAxIAxgFpAxIATQGcBAYAegGEBQYAUgNvBAYAAQBvBAYA2ARv
BAYA8gRvBAYAIAFvBAYAngBvBAYAQwfGBAAAAAAjAAAAAAABAAEAAQAQAJEEAAAQAAEAAQABABAA
JwUAADkAAQAFAAEAEACgBgAARQABABgAAQAQAHUGAABJAAMAHAABABAANgYAAEkABAAdAAAAEACr
BQcGSQAFAB4AAAEQAGUGBwZhAAcAIgAGAHUGjgAGADYGkgABAK4GlgABAK4GlgARAIUEmgARAD0B
ngARAIEAogBQIAAAAADGABgDBgABAFggAAAAAMYAIwMGAAEAYCAAAAAAxgAgB6YAAQARIQAAAACG
GGQFBgACABkhAAAAAIYYZAUlAAIAJCEAAAAAhgjXAKwABQA5IQAAAACGCAUEVgAFAEIhAAAAAIYI
WQOwAAUAVyEAAAAAhggxBFYABQBgIQAAAACGCMIArAAFAHUhAAAAAIYI6QNWAAUAfiEAAAAAhghu
ALQABQCTIQAAAACGCLsDVgAFAJwhAAAAAIYILAC4AAUAsSEAAAAAhginA1YABQC6IQAAAACGCPMA
rAAFAM8hAAAAAIYIHgRWAAUA2CEAAAAAhgiRAKwABQDtIQAAAACGCNUDVgAFAPYhAAAAAIYIdgQB
AAUABSIAAAAAhghIBLwABgAcIgAAAACGADcHVgAHACQiAAAAAIYAiAZWAAcALCIAAAAAhhhkBQYA
BwBMIgAAAADGABMHwQAHAHEiAAAAAMYBDAemAAsAhCIAAAAAxgEgB6YADACGIgAAAACGGGQFywAN
AJUiAAAAAIYYZAXLAA4ApCIAAAAAgxhkBQYADwCsIgAAAACTCFAF0QAPANgiAAAAAJMIJQHWAA8A
3yIAAAAAkwgxAdsADwDnIgAAAACWCJQG4QAQAO4iAAAAAIYYZAUGABAA9iIAAAAAkRhqBeYAEAAA
AAEAOwcAAAEASQUAAAIAQAYAAAMAHQUAAAEALwMAAAEALwMAAAEAOQAAAAIA6QAAAAMASQUAAAQA
HQUAAAEASQUAAAEAOwcAAAEAxAYAAAEAxAYAAAEALwMJAGQFAQARAGQFBgAZAGQFCgApAGQFEAAx
AGQFEAA5AGQFEABBAGQFEABJAGQFEABRAGQFEABZAGQFEABhAGQFEABpAGQFBgCZAGQFBgC5AGQF
FQDJAGQFBgCJABgDBgCJACMDBgDRAEwHHwBxAGQFJQBxAEkFLwBxAEAGMwB5AE8DNwBxAFcEPAB5
AAcAQQB5ABoARgB5ABEASwBxAGYEUABxAF4EAQDhAGQFEABxADcHVgBxAIgGVgCJAGQFBgDRAG4G
WgCJAFQGYQCRAGQFBgDxALAAZwDxAD8HbgChAGQFdADBAGQFBgAuAAsAEQEuABMAGgEuABsAOQEu
ACMAQgEuACsAawEuADMAawEuADsAawEuAEMAQgEuAEsAcQEuAFMAawEuAFsAiAFDAGMA0gHhAHsA
0gHjAGsA0gEpAnMAOQFJAnMAOQEbAAMAAQAHABEACAATAAAA2wDqAAAACQTuAAAAXQPyAAAANQTu
AAAAxgDqAAAA7QPuAAAAcgD2AAAAvwPuAAAAMAD6AAAAqwPuAAAA9wDqAAAAIgTuAAAAlQDqAAAA
2QPuAAAAegT+AAAATATuAAAAVAUCAQAARQEHAQAAmAYMAQIABgADAAIABwAFAAIACAAHAAIACQAJ
AAIACgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIADwAVAAIAEAAXAAIAEQAZAAIAEgAbAAIA
EwAdAAEAFAAfAAEAFQAhAAIAHwAjAAIAIAAlAAEAIQAlAAIAIgAnAASAAAABAAAAAAAAAAAAAAAA
AEEAAAAEAAAAAAAAAAAAAAB8AGUAAAAAAA4AAAAAAAAAAAAAAIUAzgYAAAAADgAAAAAAAAAAAAAA
hQDrBgAAAAAEAAAAAAAAAAAAAAB8AG8EAAAAAAAAAAABAAAAtQUAAAAAAEludDMyAEdldFVJbnQ2
NABHZXRJbnQ2NABHZXRJbnQxNgA8TW9kdWxlPgBnZXRfRFRMR0xDSUQASW5wdXRJRABTQ184M2Fi
NDI2ODkxMWQ0MzAwYWM3NzBiZGUyNzQ4OTY3YQBtc2NvcmxpYgBnZXRfRFRMR0xhbmd1YWdlSWQA
ZGVmYXVsdEluc3RhbmNlAGdldF9MYW5ndWFnZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBnZXRfRFRMR0xhbmd1YWdlTmFtZQBnZXRfRGF5T2ZXZWVrTmFtZQBJbnB1dE5hbWUA
Z2V0X0RheU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfTENJRERlY2lt
YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzgzYWI0MjY4OTExZDQzMDBhYzc3MGJkZTI3NDg5
NjdhLmRsbABnZXRfRFRMR0xDSURfSXNOdWxsAGdldF9EVExHTGFuZ3VhZ2VJZF9Jc051bGwAZ2V0
X0xhbmd1YWdlX0lzTnVsbABnZXRfRFRMR0xhbmd1YWdlTmFtZV9Jc051bGwAZ2V0X0RheU9mV2Vl
a05hbWVfSXNOdWxsAGdldF9EYXlOYW1lX0lzTnVsbABnZXRfTENJRERlY2ltYWxfSXNOdWxsAHNl
dF9XZWVrRGF5TnVtX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQBzZXRfV2Vla0RheU51
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3Ry
aW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBC
dWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfODNhYjQyNjg5MTFkNDMwMGFjNzcwYmRlMjc0ODk2N2Eu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzgzYWI0MjY4
OTExZDQzMDBhYzc3MGJkZTI3NDg5NjdhLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVt
bkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2Jq
ZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50
AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJ
bnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQAADVMAdQBuAGQAYQB5AAAN
TQBvAG4AZABhAHkAAA9UAHUAZQBzAGQAYQB5AAATVwBlAGQAbgBlAHMAZABhAHkAABFUAGgAdQBy
AHMAZABhAHkAAA1GAHIAaQBkAGEAeQAAEVMAYQB0AHUAcgBkAGEAeQAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AOAAzAGEA
YgA0ADIANgA4ADkAMQAxAGQANAAzADAAMABhAGMANwA3ADAAYgBkAGUAMgA3ADQAOAA5ADYANwBh
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAGGUwby4XSBHgXdZ
VbyrAEMABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDBwEIBQACAg4OCSADARI9HQgSQQMGEj0D
Bh0IBCABDggEIAECCAQgAQsIBCABBggEIAEKCAUgAgEIHAMgAAIGIAICDhF1BSABHQgIBgABEnkR
fQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIg
BSABARIMAyAADgMgAAsDIAAGAyAACgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEB
ElUEAAASIAMAAAEDKAAOAygAAgMoAAsDKAAGAygACgMoAAgECAASUQQIABJVBAgAEiAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzgzYWI0MjY4
OTExZDQzMDBhYzc3MGJkZTI3NDg5NjdhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC41BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOQ1AAAAAAAAAAAAAP41AAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADwNQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AOAAzAGEAYgA0ADIANgA4ADkAMQAxAGQANAAzADAAMABhAGMANwA3ADAAYgBkAGUAMgA3
ADQAOAA5ADYANwBhAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4ADMAYQBiADQAMgA2
ADgAOQAxADEAZAA0ADMAMAAwAGEAYwA3ADcAMABiAGQAZQAyADcANAA4ADkANgA3AGEALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAMwBh
AGIANAAyADYAOAA5ADEAMQBkADQAMwAwADAAYQBjADcANwAwAGIAZABlADIANwA0ADgAOQA2ADcA
YQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4ADMAYQBi
ADQAMgA2ADgAOQAxADEAZAA0ADMAMAAwAGEAYwA3ADcAMABiAGQAZQAyADcANAA4ADkANgA3AGEA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_83ab4268911d4300ac770bde2748967a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D14.100.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;22&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">ED</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0].Columns[DayOfWeekName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DayOfWeekName"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayOfWeekName]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[LCID Decimal]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0].Columns[DTLG_LanguageName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DTLG_LanguageName"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageName]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageId]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0].Columns[DTLG_LCID]"
                      cachedDataType="i8"
                      cachedName="DTLG_LCID"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LCID]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0].Columns[DayName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DayName"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]" />
                    <inputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[Language]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Weekday Names\Find WeekDayNum.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\Find WeekDayNum.Outputs[Output 0].Columns[WeekDayNum]"
                      dataType="i4"
                      lineageId="Package\Read Weekday Names\Find WeekDayNum.Outputs[Output 0].Columns[WeekDayNum]"
                      name="WeekDayNum" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Weekday Names\Lookup Language Code"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup Language Code"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Languages]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Languages]) [refTable]
where [refTable].[DTLG_LanguageName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DTLG_LanguageId" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DTLG_LCID" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DTLG_LanguageName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Language]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Read Weekday Names\Lookup Language Code.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  connectionManagerRefId="Package.ConnectionManagers[KJK-HP\SQLEXPRESS.BiTools]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Lookup Language Code.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Lookup Language Code.Inputs[Lookup Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Language]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DTLG_LanguageName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Read Weekday Names\Lookup Language Code.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageName]"
                      name="DTLG_LanguageName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DTLG_LanguageName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageId]"
                      dataType="i2"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageId]"
                      name="DTLG_LanguageId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DTLG_LanguageId</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LCID]"
                      dataType="i8"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LCID]"
                      name="DTLG_LCID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DTLG_LCID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Read Weekday Names\Lookup Language Code.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Read Weekday Names\Lookup Language Code.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Read Weekday Names\Unpivot Weekdays"
              componentClassID="Microsoft.UnPivot"
              contactInfo="Unpivot;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Expands an un-normalized data flow into a more normalized version. Values from multiple columns of a single record expand to multiple records in a single column. For example, expand a table that lists athletic scores with a column for each game to more records and a single score column."
              name="Unpivot Weekdays">
              <inputs>
                <input
                  refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input]"
                  hasSideEffects="true"
                  name="Unpivot Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Monday]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Monday"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Monday]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Monday</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Tuesday]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Tuesday"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Tuesday]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Tuesday</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Wednesday]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Wednesday"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Wednesday]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Wednesday</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Thursday]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Thursday"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Thursday]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Thursday</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Friday]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Friday"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Friday]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Friday</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Saturday]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Saturday"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Saturday]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Saturday</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Sunday]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Sunday"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Sunday]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Sunday</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[Language]"
                      cachedDataType="wstr"
                      cachedLength="34"
                      cachedName="Language"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[Language]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[Language]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[LCID Decimal]"
                      cachedDataType="ui8"
                      cachedName="LCID Decimal"
                      lineageId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output].Columns[LCID Decimal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[LCID Decimal]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[DTLG_LanguageName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DTLG_LanguageName"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageName]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[DTLG_LanguageId]"
                      cachedDataType="i2"
                      cachedName="DTLG_LanguageId"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LanguageId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageId]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input].Columns[DTLG_LCID]"
                      cachedDataType="i8"
                      cachedName="DTLG_LCID"
                      lineageId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output].Columns[DTLG_LCID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LCID]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output]"
                  name="Unpivot Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayOfWeekName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayOfWeekName]"
                      name="DayOfWeekName">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">true</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[LCID Decimal]"
                      dataType="ui8"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[LCID Decimal]"
                      name="LCID Decimal">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageName]"
                      name="DTLG_LanguageName">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageId]"
                      dataType="i2"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LanguageId]"
                      name="DTLG_LanguageId">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LCID]"
                      dataType="i8"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DTLG_LCID]"
                      name="DTLG_LCID">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[DayName]"
                      name="DayName">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[Language]"
                      dataType="wstr"
                      length="34"
                      lineageId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output].Columns[Language]"
                      name="Language">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Read Weekday Names.Paths[Flat File Source Error Output]"
              endId="Package\Read Weekday Names\Failed Reads.Inputs[Input 0]"
              name="Flat File Source Error Output"
              startId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Read Weekday Names.Paths[Flat File Source Output]"
              endId="Package\Read Weekday Names\Lookup Language Code.Inputs[Lookup Input]"
              name="Flat File Source Output"
              startId="Package\Read Weekday Names\File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Read Weekday Names.Paths[Lookup Match Output]"
              endId="Package\Read Weekday Names\Unpivot Weekdays.Inputs[Unpivot Input]"
              name="Lookup Match Output"
              startId="Package\Read Weekday Names\Lookup Language Code.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Read Weekday Names.Paths[OLE DB Destination Error Output]"
              endId="Package\Read Weekday Names\Failed Inserts.Inputs[Input 0]"
              name="OLE DB Destination Error Output"
              startId="Package\Read Weekday Names\Database Destination.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\Read Weekday Names.Paths[Output 0]"
              endId="Package\Read Weekday Names\Failed Reads Logging.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\Read Weekday Names\Failed Reads.Outputs[Output 0]" />
            <path
              refId="Package\Read Weekday Names.Paths[Output 01]"
              endId="Package\Read Weekday Names\Database Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Read Weekday Names\Find WeekDayNum.Outputs[Output 0]" />
            <path
              refId="Package\Read Weekday Names.Paths[Output 02]"
              endId="Package\Read Weekday Names\Failed Inserts Logging.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\Read Weekday Names\Failed Inserts.Outputs[Output 0]" />
            <path
              refId="Package\Read Weekday Names.Paths[Unpivot Output]"
              endId="Package\Read Weekday Names\Find WeekDayNum.Inputs[Input 0]"
              name="Unpivot Output"
              startId="Package\Read Weekday Names\Unpivot Weekdays.Outputs[Unpivot Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{080C810E-356C-4B84-B189-4CFD6879F144}"
      DTS:From="Package\Read All Languages"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Read Weekday Names" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{5C4A1BDE-2E3F-4308-B992-0CDA5D9218FE}"
      DTS:From="Package\Read Weekday Names"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Read Month Names" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="184,42"
          Id="Package\Read All Languages"
          TopLeft="20.5,39.5" />
        <NodeLayout
          Size="184,42"
          Id="Package\Read Month Names"
          TopLeft="20.5,243.5" />
        <NodeLayout
          Size="184,42"
          Id="Package\Read Weekday Names"
          TopLeft="20.5,141.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="112.5,81.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="112.5,183.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Reads all supported languages from CSV to dbo.Languages table "
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="375,60"
          Id="6087f362-e131-480f-a026-3f08a8414fe4"
          TopLeft="229,40" />
        <AnnotationLayout
          Text="Reads all weekday names on different languages from CSV to dbo.WeekDays table"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="465,40"
          Id="5a56b3c2-98cf-4338-a102-98caa1651b79"
          TopLeft="229,140" />
        <AnnotationLayout
          Text="Reads all month names on different languages from CSV to dbo.Months table"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="440,40"
          Id="137c8716-af0b-4bb9-8c8e-303897519222"
          TopLeft="229,245" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Read All Languages">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Read All Languages\OLE DB Destination"
          TopLeft="291,181" />
        <NodeLayout
          Size="138,42"
          Id="Package\Read All Languages\Failed Reads"
          TopLeft="606,14" />
        <NodeLayout
          Size="183,42"
          Id="Package\Read All Languages\Failed Inserts Logging"
          TopLeft="730,181" />
        <NodeLayout
          Size="151,42"
          Id="Package\Read All Languages\Flat File Source"
          TopLeft="300,9" />
        <NodeLayout
          Size="149,42"
          Id="Package\Read All Languages\Eliminate Dups"
          TopLeft="301,95" />
        <NodeLayout
          Size="142,42"
          Id="Package\Read All Languages\Failed Inserts"
          TopLeft="527,177" />
        <EdgeLayout
          Id="Package\Read All Languages.Paths[Sort Output]"
          TopLeft="376,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read All Languages.Paths[Output 0]"
          TopLeft="669,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61,0"
              Start="0,0"
              End="53.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read All Languages.Paths[OLE DB Destination Error Output]"
          TopLeft="462,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65,0"
              Start="0,0"
              End="57.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.45890625,5,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read All Languages.Paths[Flat File Source Output]"
          TopLeft="375.5,51">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read All Languages.Paths[Flat File Source Error Output]"
          TopLeft="451,32.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="155,0"
              Start="0,0"
              End="147.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="147.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="10.12361328125,5,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Read All Languages\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Read Month Names">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="189,42"
          Id="Package\Read Month Names\Lookup Language Code"
          TopLeft="32.9999999999999,113.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\Read Month Names\Failed Reads"
          TopLeft="254.5,113.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\Read Month Names\Failed Reads Logging"
          TopLeft="486,116.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Read Month Names\File Source"
          TopLeft="164,7.5" />
        <EdgeLayout
          Id="Package\Read Month Names.Paths[Output 0]"
          TopLeft="443.5,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.5,0"
              Start="0,0"
              End="35,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="35,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Month Names.Paths[Flat File Source Output]"
          TopLeft="208.666666666667,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81.1666666666667,64"
              Start="0,0"
              End="-81.1666666666667,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.0668693009119" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.0668693009119"
                    Point2="0,26.0668693009119"
                    Point3="-4,26.0668693009119" />
                  <mssgle:LineSegment
                    End="-77.1666666666667,26.0668693009119" />
                  <mssgle:CubicBezierSegment
                    Point1="-77.1666666666667,26.0668693009119"
                    Point2="-81.1666666666667,26.0668693009119"
                    Point3="-81.1666666666667,30.0668693009119" />
                  <mssgle:LineSegment
                    End="-81.1666666666667,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Month Names.Paths[Flat File Source Error Output]"
          TopLeft="249.333333333333,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99.6666666666667,64"
              Start="0,0"
              End="99.6666666666667,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.0668693009119" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.0668693009119"
                    Point2="0,26.0668693009119"
                    Point3="4,26.0668693009119" />
                  <mssgle:LineSegment
                    End="95.6666666666667,26.0668693009119" />
                  <mssgle:CubicBezierSegment
                    Point1="95.6666666666667,26.0668693009119"
                    Point2="99.6666666666667,26.0668693009119"
                    Point3="99.6666666666667,30.0668693009119" />
                  <mssgle:LineSegment
                    End="99.6666666666667,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.7930533854166,31.0668693009119,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="142,42"
          Id="Package\Read Month Names\Failed Inserts"
          TopLeft="286,338" />
        <NodeLayout
          Size="164,42"
          Id="Package\Read Month Names\Failed Months Log"
          TopLeft="496,336" />
        <NodeLayout
          Size="179,42"
          Id="Package\Read Month Names\Database Destination"
          TopLeft="48,341" />
        <NodeLayout
          Size="183,42"
          Id="Package\Read Month Names\Unpivot Month Names"
          TopLeft="37,197" />
        <EdgeLayout
          Id="Package\Read Month Names.Paths[Lookup Match Output]"
          TopLeft="128,155.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.5"
              Start="0,0"
              End="0,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,11.1953125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Read Month Names\Script Component"
          TopLeft="49,266" />
        <EdgeLayout
          Id="Package\Read Month Names.Paths[Unpivot Output]"
          TopLeft="129.5,239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Month Names.Paths[Output 01]"
          TopLeft="134,308">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Month Names.Paths[OLE DB Destination Error Output]"
          TopLeft="227,360.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59,0"
              Start="0,0"
              End="51.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.45890625,5,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Month Names.Paths[Output 02]"
          TopLeft="428,358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68,0"
              Start="0,0"
              End="60.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Read Month Names\Lookup Language Code">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Languages]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Read Weekday Names">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\Find WeekDayNum"
          TopLeft="13.5,279.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Read Weekday Names\Unpivot Weekdays"
          TopLeft="30,211.5" />
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\Failed Reads"
          TopLeft="344,116.5" />
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\Failed Reads Logging"
          TopLeft="578,118.5" />
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\File Source"
          TopLeft="149.5,7.5" />
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\Database Destination"
          TopLeft="16.5000000000001,355.5" />
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\Lookup Language Code"
          TopLeft="18.5,113.5" />
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[Flat File Source Output]"
          TopLeft="213.833333333333,53.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-100.833333333333,60"
              Start="0,0"
              End="-100.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.302203567681" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.302203567681"
                    Point2="0,24.302203567681"
                    Point3="-4,24.302203567681" />
                  <mssgle:LineSegment
                    End="-96.8333333333333,24.302203567681" />
                  <mssgle:CubicBezierSegment
                    Point1="-96.8333333333333,24.302203567681"
                    Point2="-100.833333333333,24.302203567681"
                    Point3="-100.833333333333,28.302203567681" />
                  <mssgle:LineSegment
                    End="-100.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[Flat File Source Error Output]"
          TopLeft="274.166666666667,53.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="164.333333333333,63"
              Start="0,0"
              End="164.333333333333,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5173137460651" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5173137460651"
                    Point2="0,25.5173137460651"
                    Point3="4,25.5173137460651" />
                  <mssgle:LineSegment
                    End="160.333333333333,25.5173137460651" />
                  <mssgle:CubicBezierSegment
                    Point1="160.333333333333,25.5173137460651"
                    Point2="164.333333333333,25.5173137460651"
                    Point3="164.333333333333,29.5173137460651" />
                  <mssgle:LineSegment
                    End="164.333333333333,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.5402799479167,30.5173137460651,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[Unpivot Output]"
          TopLeft="110.5,253.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[Output 01]"
          TopLeft="109.5,325.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[Output 0]"
          TopLeft="533,140.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45,0"
              Start="0,0"
              End="37.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[Lookup Match Output]"
          TopLeft="113,159.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,16.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\Failed Inserts"
          TopLeft="344,359.5" />
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[OLE DB Destination Error Output]"
          TopLeft="205.5,380.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="138.5,0"
              Start="0,0"
              End="131,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="131,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.70890625000006,5,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="189,46"
          Id="Package\Read Weekday Names\Failed Inserts Logging"
          TopLeft="578,361" />
        <EdgeLayout
          Id="Package\Read Weekday Names.Paths[Output 02]"
          TopLeft="533,383.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45,0"
              Start="0,0"
              End="37.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Read Weekday Names\Database Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Read Weekday Names\Lookup Language Code">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Languages]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Read Month Names\Database Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>